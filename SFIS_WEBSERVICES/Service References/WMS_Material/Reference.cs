//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestWeserver.WMS_Material {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="tR_SAP_MATERIAL_SHIPPING", Namespace="http://schemas.datacontract.org/2004/07/Entity")]
    [System.SerializableAttribute()]
    public partial class tR_SAP_MATERIAL_SHIPPING : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BASE_UOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DEB_CREDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DELETE_INDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FIXED_QUANField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITEM_NOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KP_NOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MOVEMENT_FLAGField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MOVE_PLANTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MOVE_STLOCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MOVE_TYPEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PLANTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RECDATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string REMARKField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SAP_QTYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SHIPPING_NOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SHIP_QTYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string STATUSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string STORE_LOCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TRANSACTION_NOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UPLOAD_DATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPLOAD_FLAGField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WITHDRAWNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WITHD_QUANField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BASE_UOM {
            get {
                return this.BASE_UOMField;
            }
            set {
                if ((object.ReferenceEquals(this.BASE_UOMField, value) != true)) {
                    this.BASE_UOMField = value;
                    this.RaisePropertyChanged("BASE_UOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DEB_CRED {
            get {
                return this.DEB_CREDField;
            }
            set {
                if ((object.ReferenceEquals(this.DEB_CREDField, value) != true)) {
                    this.DEB_CREDField = value;
                    this.RaisePropertyChanged("DEB_CRED");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DELETE_IND {
            get {
                return this.DELETE_INDField;
            }
            set {
                if ((object.ReferenceEquals(this.DELETE_INDField, value) != true)) {
                    this.DELETE_INDField = value;
                    this.RaisePropertyChanged("DELETE_IND");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FIXED_QUAN {
            get {
                return this.FIXED_QUANField;
            }
            set {
                if ((object.ReferenceEquals(this.FIXED_QUANField, value) != true)) {
                    this.FIXED_QUANField = value;
                    this.RaisePropertyChanged("FIXED_QUAN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITEM_NO {
            get {
                return this.ITEM_NOField;
            }
            set {
                if ((object.ReferenceEquals(this.ITEM_NOField, value) != true)) {
                    this.ITEM_NOField = value;
                    this.RaisePropertyChanged("ITEM_NO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KP_NO {
            get {
                return this.KP_NOField;
            }
            set {
                if ((object.ReferenceEquals(this.KP_NOField, value) != true)) {
                    this.KP_NOField = value;
                    this.RaisePropertyChanged("KP_NO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MOVEMENT_FLAG {
            get {
                return this.MOVEMENT_FLAGField;
            }
            set {
                if ((object.ReferenceEquals(this.MOVEMENT_FLAGField, value) != true)) {
                    this.MOVEMENT_FLAGField = value;
                    this.RaisePropertyChanged("MOVEMENT_FLAG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MOVE_PLANT {
            get {
                return this.MOVE_PLANTField;
            }
            set {
                if ((object.ReferenceEquals(this.MOVE_PLANTField, value) != true)) {
                    this.MOVE_PLANTField = value;
                    this.RaisePropertyChanged("MOVE_PLANT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MOVE_STLOC {
            get {
                return this.MOVE_STLOCField;
            }
            set {
                if ((object.ReferenceEquals(this.MOVE_STLOCField, value) != true)) {
                    this.MOVE_STLOCField = value;
                    this.RaisePropertyChanged("MOVE_STLOC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MOVE_TYPE {
            get {
                return this.MOVE_TYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.MOVE_TYPEField, value) != true)) {
                    this.MOVE_TYPEField = value;
                    this.RaisePropertyChanged("MOVE_TYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PLANT {
            get {
                return this.PLANTField;
            }
            set {
                if ((object.ReferenceEquals(this.PLANTField, value) != true)) {
                    this.PLANTField = value;
                    this.RaisePropertyChanged("PLANT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RECDATE {
            get {
                return this.RECDATEField;
            }
            set {
                if ((this.RECDATEField.Equals(value) != true)) {
                    this.RECDATEField = value;
                    this.RaisePropertyChanged("RECDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REMARK {
            get {
                return this.REMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.REMARKField, value) != true)) {
                    this.REMARKField = value;
                    this.RaisePropertyChanged("REMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SAP_QTY {
            get {
                return this.SAP_QTYField;
            }
            set {
                if ((this.SAP_QTYField.Equals(value) != true)) {
                    this.SAP_QTYField = value;
                    this.RaisePropertyChanged("SAP_QTY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SHIPPING_NO {
            get {
                return this.SHIPPING_NOField;
            }
            set {
                if ((object.ReferenceEquals(this.SHIPPING_NOField, value) != true)) {
                    this.SHIPPING_NOField = value;
                    this.RaisePropertyChanged("SHIPPING_NO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SHIP_QTY {
            get {
                return this.SHIP_QTYField;
            }
            set {
                if ((this.SHIP_QTYField.Equals(value) != true)) {
                    this.SHIP_QTYField = value;
                    this.RaisePropertyChanged("SHIP_QTY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STATUS {
            get {
                return this.STATUSField;
            }
            set {
                if ((object.ReferenceEquals(this.STATUSField, value) != true)) {
                    this.STATUSField = value;
                    this.RaisePropertyChanged("STATUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STORE_LOC {
            get {
                return this.STORE_LOCField;
            }
            set {
                if ((object.ReferenceEquals(this.STORE_LOCField, value) != true)) {
                    this.STORE_LOCField = value;
                    this.RaisePropertyChanged("STORE_LOC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TRANSACTION_NO {
            get {
                return this.TRANSACTION_NOField;
            }
            set {
                if ((object.ReferenceEquals(this.TRANSACTION_NOField, value) != true)) {
                    this.TRANSACTION_NOField = value;
                    this.RaisePropertyChanged("TRANSACTION_NO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UPLOAD_DATE {
            get {
                return this.UPLOAD_DATEField;
            }
            set {
                if ((this.UPLOAD_DATEField.Equals(value) != true)) {
                    this.UPLOAD_DATEField = value;
                    this.RaisePropertyChanged("UPLOAD_DATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPLOAD_FLAG {
            get {
                return this.UPLOAD_FLAGField;
            }
            set {
                if ((object.ReferenceEquals(this.UPLOAD_FLAGField, value) != true)) {
                    this.UPLOAD_FLAGField = value;
                    this.RaisePropertyChanged("UPLOAD_FLAG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WITHDRAWN {
            get {
                return this.WITHDRAWNField;
            }
            set {
                if ((object.ReferenceEquals(this.WITHDRAWNField, value) != true)) {
                    this.WITHDRAWNField = value;
                    this.RaisePropertyChanged("WITHDRAWN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WITHD_QUAN {
            get {
                return this.WITHD_QUANField;
            }
            set {
                if ((object.ReferenceEquals(this.WITHD_QUANField, value) != true)) {
                    this.WITHD_QUANField = value;
                    this.RaisePropertyChanged("WITHD_QUAN");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tr_Mtr_Inventory", Namespace="http://schemas.datacontract.org/2004/07/Entity")]
    [System.SerializableAttribute()]
    public partial class Tr_Mtr_Inventory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string actual_qtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime inventory_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string inventory_statusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string kp_noField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string remarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string stock_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string store_qtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string user_idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string actual_qty {
            get {
                return this.actual_qtyField;
            }
            set {
                if ((object.ReferenceEquals(this.actual_qtyField, value) != true)) {
                    this.actual_qtyField = value;
                    this.RaisePropertyChanged("actual_qty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime inventory_date {
            get {
                return this.inventory_dateField;
            }
            set {
                if ((this.inventory_dateField.Equals(value) != true)) {
                    this.inventory_dateField = value;
                    this.RaisePropertyChanged("inventory_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string inventory_status {
            get {
                return this.inventory_statusField;
            }
            set {
                if ((object.ReferenceEquals(this.inventory_statusField, value) != true)) {
                    this.inventory_statusField = value;
                    this.RaisePropertyChanged("inventory_status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string kp_no {
            get {
                return this.kp_noField;
            }
            set {
                if ((object.ReferenceEquals(this.kp_noField, value) != true)) {
                    this.kp_noField = value;
                    this.RaisePropertyChanged("kp_no");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string remark {
            get {
                return this.remarkField;
            }
            set {
                if ((object.ReferenceEquals(this.remarkField, value) != true)) {
                    this.remarkField = value;
                    this.RaisePropertyChanged("remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string stock_id {
            get {
                return this.stock_idField;
            }
            set {
                if ((object.ReferenceEquals(this.stock_idField, value) != true)) {
                    this.stock_idField = value;
                    this.RaisePropertyChanged("stock_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string store_qty {
            get {
                return this.store_qtyField;
            }
            set {
                if ((object.ReferenceEquals(this.store_qtyField, value) != true)) {
                    this.store_qtyField = value;
                    this.RaisePropertyChanged("store_qty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string user_id {
            get {
                return this.user_idField;
            }
            set {
                if ((object.ReferenceEquals(this.user_idField, value) != true)) {
                    this.user_idField = value;
                    this.RaisePropertyChanged("user_id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="tRmovestock", Namespace="http://schemas.datacontract.org/2004/07/Entity")]
    [System.SerializableAttribute()]
    public partial class tRmovestock : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IMMIGRATION_STOREField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KP_DESCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KP_NOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MOVE_STOREField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MOVE_STORE_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PLANTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QTYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RECDATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int STATUSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string USERIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IMMIGRATION_STORE {
            get {
                return this.IMMIGRATION_STOREField;
            }
            set {
                if ((object.ReferenceEquals(this.IMMIGRATION_STOREField, value) != true)) {
                    this.IMMIGRATION_STOREField = value;
                    this.RaisePropertyChanged("IMMIGRATION_STORE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KP_DESC {
            get {
                return this.KP_DESCField;
            }
            set {
                if ((object.ReferenceEquals(this.KP_DESCField, value) != true)) {
                    this.KP_DESCField = value;
                    this.RaisePropertyChanged("KP_DESC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KP_NO {
            get {
                return this.KP_NOField;
            }
            set {
                if ((object.ReferenceEquals(this.KP_NOField, value) != true)) {
                    this.KP_NOField = value;
                    this.RaisePropertyChanged("KP_NO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MOVE_STORE {
            get {
                return this.MOVE_STOREField;
            }
            set {
                if ((object.ReferenceEquals(this.MOVE_STOREField, value) != true)) {
                    this.MOVE_STOREField = value;
                    this.RaisePropertyChanged("MOVE_STORE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MOVE_STORE_ID {
            get {
                return this.MOVE_STORE_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.MOVE_STORE_IDField, value) != true)) {
                    this.MOVE_STORE_IDField = value;
                    this.RaisePropertyChanged("MOVE_STORE_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PLANT {
            get {
                return this.PLANTField;
            }
            set {
                if ((object.ReferenceEquals(this.PLANTField, value) != true)) {
                    this.PLANTField = value;
                    this.RaisePropertyChanged("PLANT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QTY {
            get {
                return this.QTYField;
            }
            set {
                if ((object.ReferenceEquals(this.QTYField, value) != true)) {
                    this.QTYField = value;
                    this.RaisePropertyChanged("QTY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RECDATE {
            get {
                return this.RECDATEField;
            }
            set {
                if ((object.ReferenceEquals(this.RECDATEField, value) != true)) {
                    this.RECDATEField = value;
                    this.RaisePropertyChanged("RECDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int STATUS {
            get {
                return this.STATUSField;
            }
            set {
                if ((this.STATUSField.Equals(value) != true)) {
                    this.STATUSField = value;
                    this.RaisePropertyChanged("STATUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USERID {
            get {
                return this.USERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.USERIDField, value) != true)) {
                    this.USERIDField = value;
                    this.RaisePropertyChanged("USERID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="tRKpBlocked", Namespace="http://schemas.datacontract.org/2004/07/Entity")]
    [System.SerializableAttribute()]
    public partial class tRKpBlocked : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string blocked_typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string date_codeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime hold_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string hold_descField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string kp_noField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lot_codeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime release_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string release_descField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string user_holdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string user_releaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vender_idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string blocked_type {
            get {
                return this.blocked_typeField;
            }
            set {
                if ((object.ReferenceEquals(this.blocked_typeField, value) != true)) {
                    this.blocked_typeField = value;
                    this.RaisePropertyChanged("blocked_type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string date_code {
            get {
                return this.date_codeField;
            }
            set {
                if ((object.ReferenceEquals(this.date_codeField, value) != true)) {
                    this.date_codeField = value;
                    this.RaisePropertyChanged("date_code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime hold_date {
            get {
                return this.hold_dateField;
            }
            set {
                if ((this.hold_dateField.Equals(value) != true)) {
                    this.hold_dateField = value;
                    this.RaisePropertyChanged("hold_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string hold_desc {
            get {
                return this.hold_descField;
            }
            set {
                if ((object.ReferenceEquals(this.hold_descField, value) != true)) {
                    this.hold_descField = value;
                    this.RaisePropertyChanged("hold_desc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string kp_no {
            get {
                return this.kp_noField;
            }
            set {
                if ((object.ReferenceEquals(this.kp_noField, value) != true)) {
                    this.kp_noField = value;
                    this.RaisePropertyChanged("kp_no");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lot_code {
            get {
                return this.lot_codeField;
            }
            set {
                if ((object.ReferenceEquals(this.lot_codeField, value) != true)) {
                    this.lot_codeField = value;
                    this.RaisePropertyChanged("lot_code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime release_date {
            get {
                return this.release_dateField;
            }
            set {
                if ((this.release_dateField.Equals(value) != true)) {
                    this.release_dateField = value;
                    this.RaisePropertyChanged("release_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string release_desc {
            get {
                return this.release_descField;
            }
            set {
                if ((object.ReferenceEquals(this.release_descField, value) != true)) {
                    this.release_descField = value;
                    this.RaisePropertyChanged("release_desc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string status {
            get {
                return this.statusField;
            }
            set {
                if ((object.ReferenceEquals(this.statusField, value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string user_hold {
            get {
                return this.user_holdField;
            }
            set {
                if ((object.ReferenceEquals(this.user_holdField, value) != true)) {
                    this.user_holdField = value;
                    this.RaisePropertyChanged("user_hold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string user_release {
            get {
                return this.user_releaseField;
            }
            set {
                if ((object.ReferenceEquals(this.user_releaseField, value) != true)) {
                    this.user_releaseField = value;
                    this.RaisePropertyChanged("user_release");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vender_id {
            get {
                return this.vender_idField;
            }
            set {
                if ((object.ReferenceEquals(this.vender_idField, value) != true)) {
                    this.vender_idField = value;
                    this.RaisePropertyChanged("vender_id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="tPartMapsInfo", Namespace="http://schemas.datacontract.org/2004/07/Entity")]
    [System.SerializableAttribute()]
    public partial class tPartMapsInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KP_DESCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KP_NOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KP_TYPEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KP_TYPE_DESCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RECDATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string REPLACE_GROUPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string REPLACE_GROUP_DESCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string USER_DATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string USER_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VENDER_PNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WARNING_DATEField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KP_DESC {
            get {
                return this.KP_DESCField;
            }
            set {
                if ((object.ReferenceEquals(this.KP_DESCField, value) != true)) {
                    this.KP_DESCField = value;
                    this.RaisePropertyChanged("KP_DESC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KP_NO {
            get {
                return this.KP_NOField;
            }
            set {
                if ((object.ReferenceEquals(this.KP_NOField, value) != true)) {
                    this.KP_NOField = value;
                    this.RaisePropertyChanged("KP_NO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KP_TYPE {
            get {
                return this.KP_TYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.KP_TYPEField, value) != true)) {
                    this.KP_TYPEField = value;
                    this.RaisePropertyChanged("KP_TYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KP_TYPE_DESC {
            get {
                return this.KP_TYPE_DESCField;
            }
            set {
                if ((object.ReferenceEquals(this.KP_TYPE_DESCField, value) != true)) {
                    this.KP_TYPE_DESCField = value;
                    this.RaisePropertyChanged("KP_TYPE_DESC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RECDATE {
            get {
                return this.RECDATEField;
            }
            set {
                if ((this.RECDATEField.Equals(value) != true)) {
                    this.RECDATEField = value;
                    this.RaisePropertyChanged("RECDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REPLACE_GROUP {
            get {
                return this.REPLACE_GROUPField;
            }
            set {
                if ((object.ReferenceEquals(this.REPLACE_GROUPField, value) != true)) {
                    this.REPLACE_GROUPField = value;
                    this.RaisePropertyChanged("REPLACE_GROUP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REPLACE_GROUP_DESC {
            get {
                return this.REPLACE_GROUP_DESCField;
            }
            set {
                if ((object.ReferenceEquals(this.REPLACE_GROUP_DESCField, value) != true)) {
                    this.REPLACE_GROUP_DESCField = value;
                    this.RaisePropertyChanged("REPLACE_GROUP_DESC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USER_DATE {
            get {
                return this.USER_DATEField;
            }
            set {
                if ((object.ReferenceEquals(this.USER_DATEField, value) != true)) {
                    this.USER_DATEField = value;
                    this.RaisePropertyChanged("USER_DATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USER_ID {
            get {
                return this.USER_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.USER_IDField, value) != true)) {
                    this.USER_IDField = value;
                    this.RaisePropertyChanged("USER_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VENDER_PN {
            get {
                return this.VENDER_PNField;
            }
            set {
                if ((object.ReferenceEquals(this.VENDER_PNField, value) != true)) {
                    this.VENDER_PNField = value;
                    this.RaisePropertyChanged("VENDER_PN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WARNING_DATE {
            get {
                return this.WARNING_DATEField;
            }
            set {
                if ((object.ReferenceEquals(this.WARNING_DATEField, value) != true)) {
                    this.WARNING_DATEField = value;
                    this.RaisePropertyChanged("WARNING_DATE");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="tLocInfo", Namespace="http://schemas.datacontract.org/2004/07/Entity")]
    [System.SerializableAttribute()]
    public partial class tLocInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LOC_DESCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LOC_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LOC_TOTALField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RECDATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string REMARKField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string STATUSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string USERIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LOC_DESC {
            get {
                return this.LOC_DESCField;
            }
            set {
                if ((object.ReferenceEquals(this.LOC_DESCField, value) != true)) {
                    this.LOC_DESCField = value;
                    this.RaisePropertyChanged("LOC_DESC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LOC_ID {
            get {
                return this.LOC_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.LOC_IDField, value) != true)) {
                    this.LOC_IDField = value;
                    this.RaisePropertyChanged("LOC_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LOC_TOTAL {
            get {
                return this.LOC_TOTALField;
            }
            set {
                if ((this.LOC_TOTALField.Equals(value) != true)) {
                    this.LOC_TOTALField = value;
                    this.RaisePropertyChanged("LOC_TOTAL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RECDATE {
            get {
                return this.RECDATEField;
            }
            set {
                if ((this.RECDATEField.Equals(value) != true)) {
                    this.RECDATEField = value;
                    this.RaisePropertyChanged("RECDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REMARK {
            get {
                return this.REMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.REMARKField, value) != true)) {
                    this.REMARKField = value;
                    this.RaisePropertyChanged("REMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STATUS {
            get {
                return this.STATUSField;
            }
            set {
                if ((object.ReferenceEquals(this.STATUSField, value) != true)) {
                    this.STATUSField = value;
                    this.RaisePropertyChanged("STATUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USERID {
            get {
                return this.USERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.USERIDField, value) != true)) {
                    this.USERIDField = value;
                    this.RaisePropertyChanged("USERID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WMS_Material.IMTR_Business")]
    public interface IMTR_Business {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Get_part_iqc_check", ReplyAction="http://tempuri.org/IMTR_Business/Get_part_iqc_checkResponse")]
        byte[] Get_part_iqc_check(string PN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Sel_Tr_Sn_Exist", ReplyAction="http://tempuri.org/IMTR_Business/Sel_Tr_Sn_ExistResponse")]
        string Sel_Tr_Sn_Exist(string T_sn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_Tr_Sn_fifo_Info", ReplyAction="http://tempuri.org/IMTR_Business/get_Tr_Sn_fifo_InfoResponse")]
        string[] get_Tr_Sn_fifo_Info(string T_sn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/insert_sample_info", ReplyAction="http://tempuri.org/IMTR_Business/insert_sample_infoResponse")]
        string insert_sample_info(string receive_date, string check_in_date, string checked_in, string kp_no, string productname, string vendor, string sample_name, string color, string conservator, string loc_id, string user_date, string remark, string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/delete_sample_info", ReplyAction="http://tempuri.org/IMTR_Business/delete_sample_infoResponse")]
        string delete_sample_info(string receive_date, string check_in_date, string kp_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_sample_info", ReplyAction="http://tempuri.org/IMTR_Business/get_sample_infoResponse")]
        byte[] get_sample_info(string kp_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_iqc_info_forReport", ReplyAction="http://tempuri.org/IMTR_Business/get_iqc_info_forReportResponse")]
        byte[] get_iqc_info_forReport(string kpno, System.DateTime start_time, System.DateTime end_time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_warning_info_list", ReplyAction="http://tempuri.org/IMTR_Business/get_warning_info_listResponse")]
        byte[] get_warning_info_list(string kpno, string stockId, string locId, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_wo_pre_info", ReplyAction="http://tempuri.org/IMTR_Business/get_wo_pre_infoResponse")]
        byte[] get_wo_pre_info(System.Collections.Generic.Dictionary<string, object>[] dicList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_pre_mtr_info", ReplyAction="http://tempuri.org/IMTR_Business/get_pre_mtr_infoResponse")]
        byte[] get_pre_mtr_info(string woid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/insert_into_trsn", ReplyAction="http://tempuri.org/IMTR_Business/insert_into_trsnResponse")]
        string insert_into_trsn(Entity.tRtrsn Rtrsn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/InsertSapBack", ReplyAction="http://tempuri.org/IMTR_Business/InsertSapBackResponse")]
        string InsertSapBack(string SHIPING_NO, string KP_NO, int QTY, string STORE_LOC, string MOVE_STLOC, string DEB_CRED);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Insert_R_SAP_BACK_SHIPPING", ReplyAction="http://tempuri.org/IMTR_Business/Insert_R_SAP_BACK_SHIPPINGResponse")]
        string Insert_R_SAP_BACK_SHIPPING(System.Collections.Generic.Dictionary<string, object>[] dicList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_R_Sap_Back_Shipping", ReplyAction="http://tempuri.org/IMTR_Business/get_R_Sap_Back_ShippingResponse")]
        byte[] get_R_Sap_Back_Shipping(string shipno, string debCred);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Update_R_Sap_Back_Shipping", ReplyAction="http://tempuri.org/IMTR_Business/Update_R_Sap_Back_ShippingResponse")]
        string Update_R_Sap_Back_Shipping(System.Collections.Generic.Dictionary<string, object>[] dicList, string TRANSACTION);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/check_R_stock_info", ReplyAction="http://tempuri.org/IMTR_Business/check_R_stock_infoResponse")]
        string check_R_stock_info(string stock_id, string move_stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_oqc_no_info_wince", ReplyAction="http://tempuri.org/IMTR_Business/get_oqc_no_info_winceResponse")]
        byte[] get_oqc_no_info_wince(string oqc_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_sap_in_info", ReplyAction="http://tempuri.org/IMTR_Business/get_sap_in_infoResponse")]
        byte[] get_sap_in_info(System.DateTime start_time, System.DateTime end_time, string no_type, string in_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Insert_R_SAP_BACK_SHIPPING_JSON", ReplyAction="http://tempuri.org/IMTR_Business/Insert_R_SAP_BACK_SHIPPING_JSONResponse")]
        string Insert_R_SAP_BACK_SHIPPING_JSON(string ListJsonStr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Update_R_Sap_Back_Shipping_JSON", ReplyAction="http://tempuri.org/IMTR_Business/Update_R_Sap_Back_Shipping_JSONResponse")]
        string Update_R_Sap_Back_Shipping_JSON(string ListJsonStr, string TRANSACTION);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Get_Wo_BomInfo", ReplyAction="http://tempuri.org/IMTR_Business/Get_Wo_BomInfoResponse")]
        string Get_Wo_BomInfo(string woId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_not_locid_info", ReplyAction="http://tempuri.org/IMTR_Business/get_not_locid_infoResponse")]
        byte[] get_not_locid_info();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_not_locid_list", ReplyAction="http://tempuri.org/IMTR_Business/get_not_locid_listResponse")]
        byte[] get_not_locid_list(string data, string data_value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetUserInfoByUserId_Xml", ReplyAction="http://tempuri.org/IMTR_Business/GetUserInfoByUserId_XmlResponse")]
        string GetUserInfoByUserId_Xml(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/getIQC_QTY", ReplyAction="http://tempuri.org/IMTR_Business/getIQC_QTYResponse")]
        byte[] getIQC_QTY();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/getIQC", ReplyAction="http://tempuri.org/IMTR_Business/getIQCResponse")]
        string getIQC(string kpno, int qcqty, string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/insert_IQC_QTY", ReplyAction="http://tempuri.org/IMTR_Business/insert_IQC_QTYResponse")]
        string insert_IQC_QTY(string kpno, string kpdesc, int qcqty, string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/delete_IQC_QTY", ReplyAction="http://tempuri.org/IMTR_Business/delete_IQC_QTYResponse")]
        bool delete_IQC_QTY(string kpno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/update_trsn_by_move_WINCE", ReplyAction="http://tempuri.org/IMTR_Business/update_trsn_by_move_WINCEResponse")]
        string update_trsn_by_move_WINCE(string trsn, string stock_in, string move_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_move_info", ReplyAction="http://tempuri.org/IMTR_Business/get_move_infoResponse")]
        string[] get_move_info(System.Data.DataTable dt_move, string trsn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Getmovestoreid_WinCe", ReplyAction="http://tempuri.org/IMTR_Business/Getmovestoreid_WinCeResponse")]
        byte[] Getmovestoreid_WinCe(string MOVE_STORE_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/update_accredit_status", ReplyAction="http://tempuri.org/IMTR_Business/update_accredit_statusResponse")]
        string update_accredit_status(string move_stock_id, int status, int accredit_status, string userid, string remark);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/delete_trsn_qty", ReplyAction="http://tempuri.org/IMTR_Business/delete_trsn_qtyResponse")]
        string delete_trsn_qty(out int del_qty, string kpno, string stockno, string datecode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_iqc_sap_info", ReplyAction="http://tempuri.org/IMTR_Business/get_iqc_sap_infoResponse")]
        byte[] get_iqc_sap_info(string stockno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_iqc_check_info", ReplyAction="http://tempuri.org/IMTR_Business/get_iqc_check_infoResponse")]
        byte[] get_iqc_check_info(string check_area, string check_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/update_iqc_trsn_status", ReplyAction="http://tempuri.org/IMTR_Business/update_iqc_trsn_statusResponse")]
        string update_iqc_trsn_status(int RESUILT_ID, string stockno, string kpno, System.Collections.Generic.Dictionary<string, object>[] dicList_ng, System.Collections.Generic.Dictionary<string, object>[] dicList_ok, string remark, System.Collections.Generic.Dictionary<string, object>[] dicList_all);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/insert_iqc_check_info", ReplyAction="http://tempuri.org/IMTR_Business/insert_iqc_check_infoResponse")]
        string insert_iqc_check_info(string stockno, string kpno, string datecode, string trsn, System.Collections.Generic.Dictionary<string, object>[] dicList, string userid, bool iqc_check);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_receive_info", ReplyAction="http://tempuri.org/IMTR_Business/get_receive_infoResponse")]
        byte[] get_receive_info(string stockno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/update_trsn_by_kpno", ReplyAction="http://tempuri.org/IMTR_Business/update_trsn_by_kpnoResponse")]
        string update_trsn_by_kpno(int pn_Index, string stockno, string kpno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_iqc_all_info", ReplyAction="http://tempuri.org/IMTR_Business/get_iqc_all_infoResponse")]
        byte[] get_iqc_all_info(string stockno, string kpno, int iqc_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_iqc_info_list", ReplyAction="http://tempuri.org/IMTR_Business/get_iqc_info_listResponse")]
        byte[] get_iqc_info_list(string stockno, string kpno, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_iqc_info_by_stockno", ReplyAction="http://tempuri.org/IMTR_Business/get_iqc_info_by_stocknoResponse")]
        byte[] get_iqc_info_by_stockno(string stockno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_iqc_check_result", ReplyAction="http://tempuri.org/IMTR_Business/get_iqc_check_resultResponse")]
        byte[] get_iqc_check_result(string stockno, string kpno, string dc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/InsertMaterialRec", ReplyAction="http://tempuri.org/IMTR_Business/InsertMaterialRecResponse")]
        string InsertMaterialRec(string KP_NO, int QTY, string stock_id, string loc_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Insert_R_SAP_IQC_SHIPPING", ReplyAction="http://tempuri.org/IMTR_Business/Insert_R_SAP_IQC_SHIPPINGResponse")]
        string Insert_R_SAP_IQC_SHIPPING(string stockno, string kpno, int qty, int qty_ng, string plant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_iqc_R_SAP_MTRSHIP", ReplyAction="http://tempuri.org/IMTR_Business/get_iqc_R_SAP_MTRSHIPResponse")]
        byte[] get_iqc_R_SAP_MTRSHIP(string stockno, string kpno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Update_IQC_R_SAP_MSHIPPING", ReplyAction="http://tempuri.org/IMTR_Business/Update_IQC_R_SAP_MSHIPPINGResponse")]
        string Update_IQC_R_SAP_MSHIPPING(string SHIP_NO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/insert_r_qc_check_item", ReplyAction="http://tempuri.org/IMTR_Business/insert_r_qc_check_itemResponse")]
        string insert_r_qc_check_item(string checktype, string checkitem, string checkmethod, string checkstandard, string codeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_iqc_upload_info", ReplyAction="http://tempuri.org/IMTR_Business/get_iqc_upload_infoResponse")]
        byte[] get_iqc_upload_info(string stockno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_iqc_info", ReplyAction="http://tempuri.org/IMTR_Business/get_iqc_infoResponse")]
        byte[] get_iqc_info(string kpno, System.DateTime start_time, System.DateTime end_time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_r_qc_check_item", ReplyAction="http://tempuri.org/IMTR_Business/get_r_qc_check_itemResponse")]
        byte[] get_r_qc_check_item(string checktype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/UpdateR_PART_MAPS", ReplyAction="http://tempuri.org/IMTR_Business/UpdateR_PART_MAPSResponse")]
        void UpdateR_PART_MAPS(System.Collections.Generic.Dictionary<string, object>[] diclist, string usedate, string warningdate, string iqccheck_date, string sID, string period_delay);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetBlockedPN", ReplyAction="http://tempuri.org/IMTR_Business/GetBlockedPNResponse")]
        byte[] GetBlockedPN(string Txt_KP_NO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetBlockedReport", ReplyAction="http://tempuri.org/IMTR_Business/GetBlockedReportResponse")]
        byte[] GetBlockedReport(string KP_NO, string DATE_CODE, string LOT_CODE, string BLOCKED_TYPE, string VENDER_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetWarnDate", ReplyAction="http://tempuri.org/IMTR_Business/GetWarnDateResponse")]
        byte[] GetWarnDate();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetWarnInfo", ReplyAction="http://tempuri.org/IMTR_Business/GetWarnInfoResponse")]
        byte[] GetWarnInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetSeqTrSnAndInsert", ReplyAction="http://tempuri.org/IMTR_Business/GetSeqTrSnAndInsertResponse")]
        byte[] GetSeqTrSnAndInsert(Entity.tRtrsn Rtrsn, int pring_qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Get_tr_sn_current", ReplyAction="http://tempuri.org/IMTR_Business/Get_tr_sn_currentResponse")]
        string Get_tr_sn_current(int pring_qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Insertinto_R_SAP_MATERIAL_SHIPPING", ReplyAction="http://tempuri.org/IMTR_Business/Insertinto_R_SAP_MATERIAL_SHIPPINGResponse")]
        string Insertinto_R_SAP_MATERIAL_SHIPPING(TestWeserver.WMS_Material.tR_SAP_MATERIAL_SHIPPING rmt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Delete_Tr_Sn_Info", ReplyAction="http://tempuri.org/IMTR_Business/Delete_Tr_Sn_InfoResponse")]
        string Delete_Tr_Sn_Info(string Tr_Sn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/insert_into_wo_bom", ReplyAction="http://tempuri.org/IMTR_Business/insert_into_wo_bomResponse")]
        string insert_into_wo_bom(System.Collections.Generic.Dictionary<string, object>[] dicList, string woid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_fifo_list", ReplyAction="http://tempuri.org/IMTR_Business/get_fifo_listResponse")]
        byte[] get_fifo_list(System.Collections.Generic.Dictionary<string, object>[] dicList, string plant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Get_part_info_WinCe", ReplyAction="http://tempuri.org/IMTR_Business/Get_part_info_WinCeResponse")]
        byte[] Get_part_info_WinCe(string pn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_sap_no_info_WinCe", ReplyAction="http://tempuri.org/IMTR_Business/get_sap_no_info_WinCeResponse")]
        byte[] get_sap_no_info_WinCe(string oqc_no, string kp_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Insert_R_SAP_MATERIAL_SHIPPING", ReplyAction="http://tempuri.org/IMTR_Business/Insert_R_SAP_MATERIAL_SHIPPINGResponse")]
        string Insert_R_SAP_MATERIAL_SHIPPING(System.Collections.Generic.Dictionary<string, string>[] LsDic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Update_R_SAP_MATERIAL_SHIPPING", ReplyAction="http://tempuri.org/IMTR_Business/Update_R_SAP_MATERIAL_SHIPPINGResponse")]
        string Update_R_SAP_MATERIAL_SHIPPING(string ROWID, string TRANNO, string SHIP_NO, string KP_NO, int SHIP_QTY);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Get_R_SAP_MATERIAL_SHIPPING", ReplyAction="http://tempuri.org/IMTR_Business/Get_R_SAP_MATERIAL_SHIPPINGResponse")]
        byte[] Get_R_SAP_MATERIAL_SHIPPING(string SHIP_NO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Update_R_SAP_MATERIAL_SHIPPING_STATUS", ReplyAction="http://tempuri.org/IMTR_Business/Update_R_SAP_MATERIAL_SHIPPING_STATUSResponse")]
        string Update_R_SAP_MATERIAL_SHIPPING_STATUS(string SHIP_NO, string KP_NO, int SHIP_QTY);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetUpload_mtr_Sap_Info", ReplyAction="http://tempuri.org/IMTR_Business/GetUpload_mtr_Sap_InfoResponse")]
        byte[] GetUpload_mtr_Sap_Info(string MOVE_TYPE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/getUpload_mtr_Sap_move", ReplyAction="http://tempuri.org/IMTR_Business/getUpload_mtr_Sap_moveResponse")]
        byte[] getUpload_mtr_Sap_move(string shipno, string movetype, string debcred);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Get_tr_sn_stock_date", ReplyAction="http://tempuri.org/IMTR_Business/Get_tr_sn_stock_dateResponse")]
        string Get_tr_sn_stock_date(string kp_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/CHECK_WORDER_ISSUING_WINCE", ReplyAction="http://tempuri.org/IMTR_Business/CHECK_WORDER_ISSUING_WINCEResponse")]
        string CHECK_WORDER_ISSUING_WINCE(string TrSn, string[] bom, string woId, string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Get_sale_SAP_MATERIAL_SHIPPING", ReplyAction="http://tempuri.org/IMTR_Business/Get_sale_SAP_MATERIAL_SHIPPINGResponse")]
        bool Get_sale_SAP_MATERIAL_SHIPPING(string SHIP_NO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Getweek", ReplyAction="http://tempuri.org/IMTR_Business/GetweekResponse")]
        string Getweek();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Getdate_dc", ReplyAction="http://tempuri.org/IMTR_Business/Getdate_dcResponse")]
        string Getdate_dc(string dc_week);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Insert_R_SAP_MTR_SHIPPING", ReplyAction="http://tempuri.org/IMTR_Business/Insert_R_SAP_MTR_SHIPPINGResponse")]
        string Insert_R_SAP_MTR_SHIPPING(TestWeserver.WMS_Material.tR_SAP_MATERIAL_SHIPPING rmt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Update_R_SAP_MATERIAL_SHIPPING_QTY", ReplyAction="http://tempuri.org/IMTR_Business/Update_R_SAP_MATERIAL_SHIPPING_QTYResponse")]
        bool Update_R_SAP_MATERIAL_SHIPPING_QTY(System.Collections.Generic.Dictionary<string, object>[] dicList, string trfno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetR_SAP_MTRSHIP_LIST", ReplyAction="http://tempuri.org/IMTR_Business/GetR_SAP_MTRSHIP_LISTResponse")]
        byte[] GetR_SAP_MTRSHIP_LIST(System.Collections.Generic.Dictionary<string, object>[] dicList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_sol_count", ReplyAction="http://tempuri.org/IMTR_Business/get_sol_countResponse")]
        byte[] get_sol_count(System.Collections.Generic.Dictionary<string, object>[] dicList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_woidout_count", ReplyAction="http://tempuri.org/IMTR_Business/get_woidout_countResponse")]
        byte[] get_woidout_count(System.Collections.Generic.Dictionary<string, object>[] dicList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Sel_Mtr_Inventory", ReplyAction="http://tempuri.org/IMTR_Business/Sel_Mtr_InventoryResponse")]
        byte[] Sel_Mtr_Inventory(string Kp_No, string stock_id, string USER_ID, string INVENTORY_STATUS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Upadte_Mtr_Inventory", ReplyAction="http://tempuri.org/IMTR_Business/Upadte_Mtr_InventoryResponse")]
        string Upadte_Mtr_Inventory(TestWeserver.WMS_Material.Tr_Mtr_Inventory Inventory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/insert_material_recount", ReplyAction="http://tempuri.org/IMTR_Business/insert_material_recountResponse")]
        string insert_material_recount(System.Collections.Generic.Dictionary<string, object>[] dicList, string stock_id, string loc_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetDeptInfo", ReplyAction="http://tempuri.org/IMTR_Business/GetDeptInfoResponse")]
        byte[] GetDeptInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetQtyBykpno", ReplyAction="http://tempuri.org/IMTR_Business/GetQtyBykpnoResponse")]
        byte[] GetQtyBykpno(string kp_no, string stock_id, string plant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Sel_MOVEMTR_ID", ReplyAction="http://tempuri.org/IMTR_Business/Sel_MOVEMTR_IDResponse")]
        string Sel_MOVEMTR_ID();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/insertmove_store_id", ReplyAction="http://tempuri.org/IMTR_Business/insertmove_store_idResponse")]
        string insertmove_store_id(TestWeserver.WMS_Material.tRmovestock insertmsi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Getmovestoreid", ReplyAction="http://tempuri.org/IMTR_Business/GetmovestoreidResponse")]
        byte[] Getmovestoreid(string MOVE_STORE_ID, int flag, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Getmovestockinfo", ReplyAction="http://tempuri.org/IMTR_Business/GetmovestockinfoResponse")]
        byte[] Getmovestockinfo(string MOVE_STORE_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetlocBykpno", ReplyAction="http://tempuri.org/IMTR_Business/GetlocBykpnoResponse")]
        byte[] GetlocBykpno(string kp_no, string stock_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_stock_info", ReplyAction="http://tempuri.org/IMTR_Business/get_stock_infoResponse")]
        byte[] get_stock_info(string kp_no, string stock_id, string loc_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GettKpBlockedByKpNo", ReplyAction="http://tempuri.org/IMTR_Business/GettKpBlockedByKpNoResponse")]
        byte[] GettKpBlockedByKpNo(string kp_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/move_stock_id_status", ReplyAction="http://tempuri.org/IMTR_Business/move_stock_id_statusResponse")]
        string move_stock_id_status(string move_stock_id, string kp_no, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/update_tr_sn_by_move", ReplyAction="http://tempuri.org/IMTR_Business/update_tr_sn_by_moveResponse")]
        string update_tr_sn_by_move(System.Collections.Generic.Dictionary<string, object>[] dicList, string stock_in, string move_id, string loc_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/update_material_recount_qty", ReplyAction="http://tempuri.org/IMTR_Business/update_material_recount_qtyResponse")]
        string update_material_recount_qty(string kp_no, string stock_id, string loc_id, int new_qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_Receive_stock_info", ReplyAction="http://tempuri.org/IMTR_Business/get_Receive_stock_infoResponse")]
        byte[] get_Receive_stock_info(string move_id, string kp_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/update_tr_sn_loc_status", ReplyAction="http://tempuri.org/IMTR_Business/update_tr_sn_loc_statusResponse")]
        string update_tr_sn_loc_status(System.Data.DataTable dt, string new_loc_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_mtr_deve_count", ReplyAction="http://tempuri.org/IMTR_Business/get_mtr_deve_countResponse")]
        byte[] get_mtr_deve_count(string kpnumber, string woid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetPartMapstype", ReplyAction="http://tempuri.org/IMTR_Business/GetPartMapstypeResponse")]
        byte[] GetPartMapstype();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_mtr_deve_info", ReplyAction="http://tempuri.org/IMTR_Business/get_mtr_deve_infoResponse")]
        byte[] get_mtr_deve_info(string kpnumber, string woid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_warning_in_info", ReplyAction="http://tempuri.org/IMTR_Business/get_warning_in_infoResponse")]
        byte[] get_warning_in_info(System.DateTime start_time, System.DateTime end_time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_warning_out_info", ReplyAction="http://tempuri.org/IMTR_Business/get_warning_out_infoResponse")]
        byte[] get_warning_out_info(System.DateTime start_time, System.DateTime end_time, string woid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_warning_date_info", ReplyAction="http://tempuri.org/IMTR_Business/get_warning_date_infoResponse")]
        byte[] get_warning_date_info(string kpno, string stockIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_warning_loc_id_info", ReplyAction="http://tempuri.org/IMTR_Business/get_warning_loc_id_infoResponse")]
        byte[] get_warning_loc_id_info(string kp_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Get_Material_Ageing_Report", ReplyAction="http://tempuri.org/IMTR_Business/Get_Material_Ageing_ReportResponse")]
        byte[] Get_Material_Ageing_Report(string KP_NO, int StartDays, int EndDays, int sFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/CheckPrgVsersion", ReplyAction="http://tempuri.org/IMTR_Business/CheckPrgVsersionResponse")]
        bool CheckPrgVsersion(string Prg_Name, string Prg_Ver, string Ap_Desc, string Ap_Type, string Ap_Path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Check_VerMsg", ReplyAction="http://tempuri.org/IMTR_Business/Check_VerMsgResponse")]
        string Check_VerMsg();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_r_tr_sn_detail_info", ReplyAction="http://tempuri.org/IMTR_Business/get_r_tr_sn_detail_infoResponse")]
        byte[] get_r_tr_sn_detail_info(string woid, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_r_kp_locked", ReplyAction="http://tempuri.org/IMTR_Business/get_r_kp_lockedResponse")]
        byte[] get_r_kp_locked();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/insert_r_kp_locked", ReplyAction="http://tempuri.org/IMTR_Business/insert_r_kp_lockedResponse")]
        string insert_r_kp_locked(TestWeserver.WMS_Material.tRKpBlocked rkpblocked);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/update_r_kp_locked", ReplyAction="http://tempuri.org/IMTR_Business/update_r_kp_lockedResponse")]
        string update_r_kp_locked(TestWeserver.WMS_Material.tRKpBlocked rkpblocked);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_oqc_no_info", ReplyAction="http://tempuri.org/IMTR_Business/get_oqc_no_infoResponse")]
        byte[] get_oqc_no_info(string oqc_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_sap_no_info", ReplyAction="http://tempuri.org/IMTR_Business/get_sap_no_infoResponse")]
        byte[] get_sap_no_info(string oqc_no, string kp_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/update_tR_SAP_PO_info", ReplyAction="http://tempuri.org/IMTR_Business/update_tR_SAP_PO_infoResponse")]
        string update_tR_SAP_PO_info(string po_id, string oqc_no, string pn, int income_qty, string status, string po_item, string qc_no, string qc_status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/insert_r_sop_no", ReplyAction="http://tempuri.org/IMTR_Business/insert_r_sop_noResponse")]
        string insert_r_sop_no(System.Data.DataTable dt, string stock_no, string stock_year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_tr_sn_list", ReplyAction="http://tempuri.org/IMTR_Business/get_tr_sn_listResponse")]
        byte[] get_tr_sn_list(string kp_no, string tr_sn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_tr_sn_no", ReplyAction="http://tempuri.org/IMTR_Business/get_tr_sn_noResponse")]
        byte[] get_tr_sn_no(string tr_sn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/update_tr_sn_loc_id", ReplyAction="http://tempuri.org/IMTR_Business/update_tr_sn_loc_idResponse")]
        string update_tr_sn_loc_id(string[] LsTrsn, string stock_id, string loc_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_tr_sn_info", ReplyAction="http://tempuri.org/IMTR_Business/get_tr_sn_infoResponse")]
        byte[] get_tr_sn_info(string stock_no, string kp_no, string tr_sn, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/update_tr_sn_qty", ReplyAction="http://tempuri.org/IMTR_Business/update_tr_sn_qtyResponse")]
        string update_tr_sn_qty(string tr_sn, int modify_qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/AddUserJurisdiction", ReplyAction="http://tempuri.org/IMTR_Business/AddUserJurisdictionResponse")]
        string AddUserJurisdiction(Entity.tUserPopList[] ArrUserPopList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/DeletetEditingByUserId", ReplyAction="http://tempuri.org/IMTR_Business/DeletetEditingByUserIdResponse")]
        string DeletetEditingByUserId(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/AddFunctionList", ReplyAction="http://tempuri.org/IMTR_Business/AddFunctionListResponse")]
        void AddFunctionList(Entity.tFunctionList[] lsfunlist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/AddProgInfo", ReplyAction="http://tempuri.org/IMTR_Business/AddProgInfoResponse")]
        void AddProgInfo(Entity.tProgInfo proginfomodel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_R_loction_info", ReplyAction="http://tempuri.org/IMTR_Business/get_R_loction_infoResponse")]
        byte[] get_R_loction_info(string loc_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_R_stock_info", ReplyAction="http://tempuri.org/IMTR_Business/get_R_stock_infoResponse")]
        byte[] get_R_stock_info(string stock_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/InsertSystemLog", ReplyAction="http://tempuri.org/IMTR_Business/InsertSystemLogResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="err")]
        string InsertSystemLog(Entity.T_SYSTEM_LOG tsl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/QueryRoleInfo", ReplyAction="http://tempuri.org/IMTR_Business/QueryRoleInfoResponse")]
        byte[] QueryRoleInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/InsertRoleInfo", ReplyAction="http://tempuri.org/IMTR_Business/InsertRoleInfoResponse")]
        void InsertRoleInfo(Entity.tRoleInfo roleinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetRoleInfo", ReplyAction="http://tempuri.org/IMTR_Business/GetRoleInfoResponse")]
        byte[] GetRoleInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/DB_Config", ReplyAction="http://tempuri.org/IMTR_Business/DB_ConfigResponse")]
        byte[] DB_Config(string Prg_Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_material_stock", ReplyAction="http://tempuri.org/IMTR_Business/get_material_stockResponse")]
        byte[] get_material_stock();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_material_info", ReplyAction="http://tempuri.org/IMTR_Business/get_material_infoResponse")]
        byte[] get_material_info(string stock_id, string kp_no, string loc_id, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/get_stock_list", ReplyAction="http://tempuri.org/IMTR_Business/get_stock_listResponse")]
        byte[] get_stock_list(string kp_no, string stock_id, string loc_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Get_tr_Sn_Count", ReplyAction="http://tempuri.org/IMTR_Business/Get_tr_Sn_CountResponse")]
        byte[] Get_tr_Sn_Count(string STOCK_ID, string KP_NO, string STATUS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Inser_Mtr_Inventory", ReplyAction="http://tempuri.org/IMTR_Business/Inser_Mtr_InventoryResponse")]
        string Inser_Mtr_Inventory(TestWeserver.WMS_Material.Tr_Mtr_Inventory Inventory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetMaterialPreparationStation", ReplyAction="http://tempuri.org/IMTR_Business/GetMaterialPreparationStationResponse")]
        byte[] GetMaterialPreparationStation(Entity.tMaterialPreparation MP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetMaterialPreparation_1", ReplyAction="http://tempuri.org/IMTR_Business/GetMaterialPreparation_1Response")]
        byte[] GetMaterialPreparation_1(Entity.tMaterialPreparation tmp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetKpdistinctMaterial", ReplyAction="http://tempuri.org/IMTR_Business/GetKpdistinctMaterialResponse")]
        byte[] GetKpdistinctMaterial(Entity.tMaterialPreparation tmp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/CheckNewStationList", ReplyAction="http://tempuri.org/IMTR_Business/CheckNewStationListResponse")]
        byte[] CheckNewStationList(string sSEQ);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/QueryAllStationList", ReplyAction="http://tempuri.org/IMTR_Business/QueryAllStationListResponse")]
        byte[] QueryAllStationList(string sMasterId, string sWO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/UpdateMaterialPreparation", ReplyAction="http://tempuri.org/IMTR_Business/UpdateMaterialPreparationResponse")]
        void UpdateMaterialPreparation(Entity.tMaterialPreparation tmp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/PublicMaterialPreparationSelect", ReplyAction="http://tempuri.org/IMTR_Business/PublicMaterialPreparationSelectResponse")]
        byte[] PublicMaterialPreparationSelect(string woId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/InsertMaterialPreparation_1", ReplyAction="http://tempuri.org/IMTR_Business/InsertMaterialPreparation_1Response")]
        void InsertMaterialPreparation_1(string sMasterid, string sWoid, string sUserid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetMaterialPreByStation_1", ReplyAction="http://tempuri.org/IMTR_Business/GetMaterialPreByStation_1Response")]
        byte[] GetMaterialPreByStation_1(string mWoid, string mMasterId, string mStationno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetMaterialPreByKpnumber_1", ReplyAction="http://tempuri.org/IMTR_Business/GetMaterialPreByKpnumber_1Response")]
        byte[] GetMaterialPreByKpnumber_1(string mWoid, string mKpnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetAllMachineInfo", ReplyAction="http://tempuri.org/IMTR_Business/GetAllMachineInfoResponse")]
        byte[] GetAllMachineInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetMachineInfoByMachineid", ReplyAction="http://tempuri.org/IMTR_Business/GetMachineInfoByMachineidResponse")]
        byte[] GetMachineInfoByMachineid(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/InsertMachineInfo", ReplyAction="http://tempuri.org/IMTR_Business/InsertMachineInfoResponse")]
        void InsertMachineInfo(Entity.tMachineInfo machineinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/EditMachineInfo", ReplyAction="http://tempuri.org/IMTR_Business/EditMachineInfoResponse")]
        void EditMachineInfo(string machineId, Entity.tMachineInfo machineInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/DeleteMachineInfo", ReplyAction="http://tempuri.org/IMTR_Business/DeleteMachineInfoResponse")]
        void DeleteMachineInfo(string machineId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetSMTLineList", ReplyAction="http://tempuri.org/IMTR_Business/GetSMTLineListResponse")]
        byte[] GetSMTLineList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Sel_Kp_Blocked", ReplyAction="http://tempuri.org/IMTR_Business/Sel_Kp_BlockedResponse")]
        byte[] Sel_Kp_Blocked(out string Status, string KP_NO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Sel_Loc_Info", ReplyAction="http://tempuri.org/IMTR_Business/Sel_Loc_InfoResponse")]
        byte[] Sel_Loc_Info(out string Status, string P_Name, string F_Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Del_Loc_Info", ReplyAction="http://tempuri.org/IMTR_Business/Del_Loc_InfoResponse")]
        string Del_Loc_Info(string P_Name, string F_Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Inser_Loc_Info", ReplyAction="http://tempuri.org/IMTR_Business/Inser_Loc_InfoResponse")]
        string Inser_Loc_Info(string P_Name, string F_Name, string PC_NAME, string MAC_ADDRESS, string U_ID, string U_NAME);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/insert_into_R_tr_sn", ReplyAction="http://tempuri.org/IMTR_Business/insert_into_R_tr_snResponse")]
        string insert_into_R_tr_sn(Entity.tRtrsn Rtrsn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/insert_into_R_tr_sn_detail", ReplyAction="http://tempuri.org/IMTR_Business/insert_into_R_tr_sn_detailResponse")]
        string insert_into_R_tr_sn_detail(Entity.tRtrsn Rtrsn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetSeqTrSnInfo", ReplyAction="http://tempuri.org/IMTR_Business/GetSeqTrSnInfoResponse")]
        string GetSeqTrSnInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetServersTime", ReplyAction="http://tempuri.org/IMTR_Business/GetServersTimeResponse")]
        System.DateTime GetServersTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetPartMapsInfoALL", ReplyAction="http://tempuri.org/IMTR_Business/GetPartMapsInfoALLResponse")]
        byte[] GetPartMapsInfoALL();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Update_KpInfo", ReplyAction="http://tempuri.org/IMTR_Business/Update_KpInfoResponse")]
        string Update_KpInfo(TestWeserver.WMS_Material.tPartMapsInfo locdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Del_KpInfo", ReplyAction="http://tempuri.org/IMTR_Business/Del_KpInfoResponse")]
        string Del_KpInfo(string Pn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Get_part_info", ReplyAction="http://tempuri.org/IMTR_Business/Get_part_infoResponse")]
        byte[] Get_part_info(string pn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/RefreshMaterialMonitor_WinCE", ReplyAction="http://tempuri.org/IMTR_Business/RefreshMaterialMonitor_WinCEResponse")]
        byte[] RefreshMaterialMonitor_WinCE();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/UpdateSmtkPMonnitorCdata", ReplyAction="http://tempuri.org/IMTR_Business/UpdateSmtkPMonnitorCdataResponse")]
        void UpdateSmtkPMonnitorCdata(Entity.tSmtKpMonitor skm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/QueryMaterialInOutPut", ReplyAction="http://tempuri.org/IMTR_Business/QueryMaterialInOutPutResponse")]
        byte[] QueryMaterialInOutPut(Entity.tSmtKpMonitor skm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/QueryMaterialInOutPut_WinCE", ReplyAction="http://tempuri.org/IMTR_Business/QueryMaterialInOutPut_WinCEResponse")]
        byte[] QueryMaterialInOutPut_WinCE(Entity.tSmtKpMonitor skm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/QueryRollbackMaterial", ReplyAction="http://tempuri.org/IMTR_Business/QueryRollbackMaterialResponse")]
        byte[] QueryRollbackMaterial(string woId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/QueryRollbackMaterial_WinCE", ReplyAction="http://tempuri.org/IMTR_Business/QueryRollbackMaterial_WinCEResponse")]
        byte[] QueryRollbackMaterial_WinCE(string woId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/RollbackMaterial", ReplyAction="http://tempuri.org/IMTR_Business/RollbackMaterialResponse")]
        void RollbackMaterial(Entity.tSmtKpMonitor skm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetQueliaoStationList", ReplyAction="http://tempuri.org/IMTR_Business/GetQueliaoStationListResponse")]
        byte[] GetQueliaoStationList(string sSEQ, string sMO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetQueliaoStationList_WinCE", ReplyAction="http://tempuri.org/IMTR_Business/GetQueliaoStationList_WinCEResponse")]
        byte[] GetQueliaoStationList_WinCE(string sSEQ, string sMO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/CheckSupplyMaterial", ReplyAction="http://tempuri.org/IMTR_Business/CheckSupplyMaterialResponse")]
        byte[] CheckSupplyMaterial(string sSEQ, string sMO, string sPartNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/CheckSupplyMaterial_WinCE", ReplyAction="http://tempuri.org/IMTR_Business/CheckSupplyMaterial_WinCEResponse")]
        byte[] CheckSupplyMaterial_WinCE(string sSEQ, string sMO, string sPartNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/UpdateSupplyMaterialStatus", ReplyAction="http://tempuri.org/IMTR_Business/UpdateSupplyMaterialStatusResponse")]
        void UpdateSupplyMaterialStatus(Entity.tSmtKpMonitor skm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/CheckKpMasterIdStatus", ReplyAction="http://tempuri.org/IMTR_Business/CheckKpMasterIdStatusResponse")]
        bool CheckKpMasterIdStatus(string masterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetKpMasterIdStatus", ReplyAction="http://tempuri.org/IMTR_Business/GetKpMasterIdStatusResponse")]
        string GetKpMasterIdStatus(string masterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/DeleteSmtKpMonitor", ReplyAction="http://tempuri.org/IMTR_Business/DeleteSmtKpMonitorResponse")]
        void DeleteSmtKpMonitor(string sSEQ, string sMO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetMaterialTrsnList", ReplyAction="http://tempuri.org/IMTR_Business/GetMaterialTrsnListResponse")]
        string[] GetMaterialTrsnList(string sSEQ, string sWO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/CheckSCARCITYStation", ReplyAction="http://tempuri.org/IMTR_Business/CheckSCARCITYStationResponse")]
        bool CheckSCARCITYStation(string Masterid, string woId, string Machine, string Station);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/QueryPartBlocked", ReplyAction="http://tempuri.org/IMTR_Business/QueryPartBlockedResponse")]
        byte[] QueryPartBlocked();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/InsertPartBlocked", ReplyAction="http://tempuri.org/IMTR_Business/InsertPartBlockedResponse")]
        void InsertPartBlocked(Entity.tPartBlockedTable tpb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/UpdatePartBlocked", ReplyAction="http://tempuri.org/IMTR_Business/UpdatePartBlockedResponse")]
        void UpdatePartBlocked(Entity.tPartBlockedTable tpb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/DeletePartBlocked", ReplyAction="http://tempuri.org/IMTR_Business/DeletePartBlockedResponse")]
        void DeletePartBlocked(string rowid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/QueryPartBlockedList", ReplyAction="http://tempuri.org/IMTR_Business/QueryPartBlockedListResponse")]
        byte[] QueryPartBlockedList(string PartNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GettPartBlockedByPartNo", ReplyAction="http://tempuri.org/IMTR_Business/GettPartBlockedByPartNoResponse")]
        byte[] GettPartBlockedByPartNo(string partno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/InserSmtIo", ReplyAction="http://tempuri.org/IMTR_Business/InserSmtIoResponse")]
        void InserSmtIo(Entity.tSmtIOTable smtio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/UpdateSmtIOStatus", ReplyAction="http://tempuri.org/IMTR_Business/UpdateSmtIOStatusResponse")]
        void UpdateSmtIOStatus(Entity.tSmtIOTable sit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetAllSmtIO", ReplyAction="http://tempuri.org/IMTR_Business/GetAllSmtIOResponse")]
        byte[] GetAllSmtIO(string sSEQ, string sMO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/DeleteSmtIo", ReplyAction="http://tempuri.org/IMTR_Business/DeleteSmtIoResponse")]
        void DeleteSmtIo(string sSEQ, string sMO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetMaterialPreparationKpAndStation", ReplyAction="http://tempuri.org/IMTR_Business/GetMaterialPreparationKpAndStationResponse")]
        byte[] GetMaterialPreparationKpAndStation(Entity.tMaterialPreparation MP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetSmtKpMasterNotChecked", ReplyAction="http://tempuri.org/IMTR_Business/GetSmtKpMasterNotCheckedResponse")]
        byte[] GetSmtKpMasterNotChecked();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/UpdateAuditingStatus", ReplyAction="http://tempuri.org/IMTR_Business/UpdateAuditingStatusResponse")]
        string UpdateAuditingStatus(Entity.tSmtKPMasterTable smtkpmaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/QueryKpMasterAudit", ReplyAction="http://tempuri.org/IMTR_Business/QueryKpMasterAuditResponse")]
        byte[] QueryKpMasterAudit(int Days);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/InsertSmtKpMonitor", ReplyAction="http://tempuri.org/IMTR_Business/InsertSmtKpMonitorResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="err")]
        string InsertSmtKpMonitor(Entity.tSmtKpMonitor kpmonitor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetSmtKpMonitor", ReplyAction="http://tempuri.org/IMTR_Business/GetSmtKpMonitorResponse")]
        byte[] GetSmtKpMonitor(string masterId, string woId, string stationno, int cdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetSmtKpMonitor_WinCE", ReplyAction="http://tempuri.org/IMTR_Business/GetSmtKpMonitor_WinCEResponse")]
        byte[] GetSmtKpMonitor_WinCE(string masterId, string woId, string stationno, int cdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/EditSmtKpMonitorFlag", ReplyAction="http://tempuri.org/IMTR_Business/EditSmtKpMonitorFlagResponse")]
        void EditSmtKpMonitorFlag(string kpmonitorId, BLL.tSmtKpMonitor.CDATA cdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Check_MaterialScrap", ReplyAction="http://tempuri.org/IMTR_Business/Check_MaterialScrapResponse")]
        bool Check_MaterialScrap(string pn, string vc, string dc, string lc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetSmtIO", ReplyAction="http://tempuri.org/IMTR_Business/GetSmtIOResponse")]
        byte[] GetSmtIO(string masterId, string woId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetSmtIO_WinCE", ReplyAction="http://tempuri.org/IMTR_Business/GetSmtIO_WinCEResponse")]
        byte[] GetSmtIO_WinCE(string masterId, string woId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetSmtIOMachineIdStatus", ReplyAction="http://tempuri.org/IMTR_Business/GetSmtIOMachineIdStatusResponse")]
        byte[] GetSmtIOMachineIdStatus(string machineId, BLL.tSmtIO.SmtIOStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetSmtIOMachineIdStatus_WinCE", ReplyAction="http://tempuri.org/IMTR_Business/GetSmtIOMachineIdStatus_WinCEResponse")]
        byte[] GetSmtIOMachineIdStatus_WinCE(string machineId, BLL.tSmtIO.SmtIOStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/EditSmtIOStatus", ReplyAction="http://tempuri.org/IMTR_Business/EditSmtIOStatusResponse")]
        void EditSmtIOStatus(string masterId, string woId, BLL.tSmtIO.SmtIOStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetMaterialPreparation_WinCE", ReplyAction="http://tempuri.org/IMTR_Business/GetMaterialPreparation_WinCEResponse")]
        byte[] GetMaterialPreparation_WinCE(string woId, string masterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/ChkNormalLogStatus", ReplyAction="http://tempuri.org/IMTR_Business/ChkNormalLogStatusResponse")]
        bool ChkNormalLogStatus(string masterId, string woId, string pcbside, string machineId, string stationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/InsertSmtKpNormalLogs", ReplyAction="http://tempuri.org/IMTR_Business/InsertSmtKpNormalLogsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="err")]
        string InsertSmtKpNormalLogs(Entity.tSmtKpNormalLog[] lskpnormallog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/InsertSmtKpNormalLog", ReplyAction="http://tempuri.org/IMTR_Business/InsertSmtKpNormalLogResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="err")]
        string InsertSmtKpNormalLog(Entity.tSmtKpNormalLog kpnormallog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetKpNumberInSEQ", ReplyAction="http://tempuri.org/IMTR_Business/GetKpNumberInSEQResponse")]
        byte[] GetKpNumberInSEQ(string MasterId, string WoId, string kpnumber, string station);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetKpNumberInSEQ_WinCE", ReplyAction="http://tempuri.org/IMTR_Business/GetKpNumberInSEQ_WinCEResponse")]
        byte[] GetKpNumberInSEQ_WinCE(string MasterId, string WoId, string kpnumber, string station);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/CheckKpSupply", ReplyAction="http://tempuri.org/IMTR_Business/CheckKpSupplyResponse")]
        byte[] CheckKpSupply(string MasterId, string WoId, string kpnumber, string cdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/CheckKpSupply_WinCE", ReplyAction="http://tempuri.org/IMTR_Business/CheckKpSupply_WinCEResponse")]
        byte[] CheckKpSupply_WinCE(string MasterId, string WoId, string kpnumber, string cdata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetServerDateTime", ReplyAction="http://tempuri.org/IMTR_Business/GetServerDateTimeResponse")]
        string GetServerDateTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetSmtkPMonnitorStation", ReplyAction="http://tempuri.org/IMTR_Business/GetSmtkPMonnitorStationResponse")]
        byte[] GetSmtkPMonnitorStation(string sSEQ, string sMO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetSmtkPMonnitorStation_WinCE", ReplyAction="http://tempuri.org/IMTR_Business/GetSmtkPMonnitorStation_WinCEResponse")]
        byte[] GetSmtkPMonnitorStation_WinCE(string sSEQ, string sMO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/ChkStationInMonitor", ReplyAction="http://tempuri.org/IMTR_Business/ChkStationInMonitorResponse")]
        byte[] ChkStationInMonitor(Entity.tSmtKpMonitor skm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/ChkStationInMonitor_WinCE", ReplyAction="http://tempuri.org/IMTR_Business/ChkStationInMonitor_WinCEResponse")]
        byte[] ChkStationInMonitor_WinCE(Entity.tSmtKpMonitor skm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/InsertSmtIoData", ReplyAction="http://tempuri.org/IMTR_Business/InsertSmtIoDataResponse")]
        void InsertSmtIoData(Entity.tSmtKpMonitor skm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/RefreshMaterialMonitor", ReplyAction="http://tempuri.org/IMTR_Business/RefreshMaterialMonitorResponse")]
        byte[] RefreshMaterialMonitor();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/UpdateUsedate", ReplyAction="http://tempuri.org/IMTR_Business/UpdateUsedateResponse")]
        void UpdateUsedate(string DateType, TestWeserver.WMS_Material.tPartMapsInfo locdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Sel_Material_Preparation_Info", ReplyAction="http://tempuri.org/IMTR_Business/Sel_Material_Preparation_InfoResponse")]
        byte[] Sel_Material_Preparation_Info(out string Status, string PreparationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Sel_Tr_Sn_Info", ReplyAction="http://tempuri.org/IMTR_Business/Sel_Tr_Sn_InfoResponse")]
        byte[] Sel_Tr_Sn_Info(out string Status, string T_sn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Sel_Tr_Sn_Info_CE", ReplyAction="http://tempuri.org/IMTR_Business/Sel_Tr_Sn_Info_CEResponse")]
        byte[] Sel_Tr_Sn_Info_CE(out string Status, string T_sn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Update_TR_SN", ReplyAction="http://tempuri.org/IMTR_Business/Update_TR_SNResponse")]
        string Update_TR_SN(string R_Trsn, string R_WOID, string R_USERID, string R_STATUS, string R_RMAK1, string R_RMAK2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetWoBomInfo", ReplyAction="http://tempuri.org/IMTR_Business/GetWoBomInfoResponse")]
        byte[] GetWoBomInfo(string woId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetWoBomInfo_WinCE", ReplyAction="http://tempuri.org/IMTR_Business/GetWoBomInfo_WinCEResponse")]
        byte[] GetWoBomInfo_WinCE(string woId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/InsertWoBomInfo", ReplyAction="http://tempuri.org/IMTR_Business/InsertWoBomInfoResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Err")]
        string InsertWoBomInfo(Entity.T_WO_BOM_INFO twbi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/InsertWoBomInfoList", ReplyAction="http://tempuri.org/IMTR_Business/InsertWoBomInfoListResponse")]
        string InsertWoBomInfoList(Entity.T_WO_BOM_INFO[] lstwbom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/InsertWoBomPrintInfos", ReplyAction="http://tempuri.org/IMTR_Business/InsertWoBomPrintInfosResponse")]
        string InsertWoBomPrintInfos(Entity.tMaterialPreparation[] mp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/InsertWoBomPrintInfo", ReplyAction="http://tempuri.org/IMTR_Business/InsertWoBomPrintInfoResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Err")]
        string InsertWoBomPrintInfo(Entity.tMaterialPreparation mp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetMaterialPreparation", ReplyAction="http://tempuri.org/IMTR_Business/GetMaterialPreparationResponse")]
        byte[] GetMaterialPreparation(string woId, string masterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/QueryWoBomInfoData", ReplyAction="http://tempuri.org/IMTR_Business/QueryWoBomInfoDataResponse")]
        byte[] QueryWoBomInfoData(string WO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/InserWoBomData", ReplyAction="http://tempuri.org/IMTR_Business/InserWoBomDataResponse")]
        void InserWoBomData(Entity.tWoBomInfoTable wbt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/Sel_woId_Trsn_List", ReplyAction="http://tempuri.org/IMTR_Business/Sel_woId_Trsn_ListResponse")]
        byte[] Sel_woId_Trsn_List(string woId, string Flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/HelloWorld", ReplyAction="http://tempuri.org/IMTR_Business/HelloWorldResponse")]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetSmtKpMaster", ReplyAction="http://tempuri.org/IMTR_Business/GetSmtKpMasterResponse")]
        byte[] GetSmtKpMaster(Entity.tSmtKPMasterTable TKM);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetAllMasterid", ReplyAction="http://tempuri.org/IMTR_Business/GetAllMasteridResponse")]
        byte[] GetAllMasterid();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/DeleteBomKpMaster", ReplyAction="http://tempuri.org/IMTR_Business/DeleteBomKpMasterResponse")]
        void DeleteBomKpMaster(string KpMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetMachineIdAndMasterIdListByPartnumber", ReplyAction="http://tempuri.org/IMTR_Business/GetMachineIdAndMasterIdListByPartnumberResponse")]
        byte[] GetMachineIdAndMasterIdListByPartnumber(string partnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/InsertSmtKpDetaltForWo", ReplyAction="http://tempuri.org/IMTR_Business/InsertSmtKpDetaltForWoResponse")]
        string InsertSmtKpDetaltForWo(Entity.SMT_KP_DETALTForWo detaltforwo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GettSmtKPDetaltForWo", ReplyAction="http://tempuri.org/IMTR_Business/GettSmtKPDetaltForWoResponse")]
        byte[] GettSmtKPDetaltForWo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GettSmtKPDetaltForWoByKpnumber", ReplyAction="http://tempuri.org/IMTR_Business/GettSmtKPDetaltForWoByKpnumberResponse")]
        byte[] GettSmtKPDetaltForWoByKpnumber(string kpnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetStationno", ReplyAction="http://tempuri.org/IMTR_Business/GetStationnoResponse")]
        byte[] GetStationno(string partnumber, string lineid, string pcbside);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/JudgeKpExists", ReplyAction="http://tempuri.org/IMTR_Business/JudgeKpExistsResponse")]
        byte[] JudgeKpExists(string stationno, string masterid, string kpnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetPartnumberAData", ReplyAction="http://tempuri.org/IMTR_Business/GetPartnumberADataResponse")]
        byte[] GetPartnumberAData(string partnumber, string lineid, string pcbside);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetAllKpMaster", ReplyAction="http://tempuri.org/IMTR_Business/GetAllKpMasterResponse")]
        byte[] GetAllKpMaster();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetKpDetalt", ReplyAction="http://tempuri.org/IMTR_Business/GetKpDetaltResponse")]
        byte[] GetKpDetalt(string masterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetUserInfoByUserId", ReplyAction="http://tempuri.org/IMTR_Business/GetUserInfoByUserIdResponse")]
        byte[] GetUserInfoByUserId(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetJurUserInfoByIdandpwd", ReplyAction="http://tempuri.org/IMTR_Business/GetJurUserInfoByIdandpwdResponse")]
        byte[] GetJurUserInfoByIdandpwd(string userId, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetJurUserInfoByIdandpwd_WinCe", ReplyAction="http://tempuri.org/IMTR_Business/GetJurUserInfoByIdandpwd_WinCeResponse")]
        byte[] GetJurUserInfoByIdandpwd_WinCe(string userId, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetUserInfo", ReplyAction="http://tempuri.org/IMTR_Business/GetUserInfoResponse")]
        byte[] GetUserInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/InsertUserInfo", ReplyAction="http://tempuri.org/IMTR_Business/InsertUserInfoResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Err")]
        string InsertUserInfo(Entity.tUserInfo userinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/EditUserInfo", ReplyAction="http://tempuri.org/IMTR_Business/EditUserInfoResponse")]
        void EditUserInfo(string userId, Entity.tUserInfo userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/UpdateUserPassword", ReplyAction="http://tempuri.org/IMTR_Business/UpdateUserPasswordResponse")]
        void UpdateUserPassword(Entity.tUserInfo userinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetAllProgFunctionInfo", ReplyAction="http://tempuri.org/IMTR_Business/GetAllProgFunctionInfoResponse")]
        byte[] GetAllProgFunctionInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetJurUserInfo", ReplyAction="http://tempuri.org/IMTR_Business/GetJurUserInfoResponse")]
        byte[] GetJurUserInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetUserJurisdictionByUserId2", ReplyAction="http://tempuri.org/IMTR_Business/GetUserJurisdictionByUserId2Response")]
        byte[] GetUserJurisdictionByUserId2(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetUserJurisdictionByUserId", ReplyAction="http://tempuri.org/IMTR_Business/GetUserJurisdictionByUserIdResponse")]
        byte[] GetUserJurisdictionByUserId(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetJurUserInfoById", ReplyAction="http://tempuri.org/IMTR_Business/GetJurUserInfoByIdResponse")]
        byte[] GetJurUserInfoById(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetJurUserInfoByName", ReplyAction="http://tempuri.org/IMTR_Business/GetJurUserInfoByNameResponse")]
        byte[] GetJurUserInfoByName(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/DeleteUserInfoByUserId", ReplyAction="http://tempuri.org/IMTR_Business/DeleteUserInfoByUserIdResponse")]
        void DeleteUserInfoByUserId(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/ChkUserInfoIdAndPwd", ReplyAction="http://tempuri.org/IMTR_Business/ChkUserInfoIdAndPwdResponse")]
        bool ChkUserInfoIdAndPwd(string userId, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GettStorehouseInfoById", ReplyAction="http://tempuri.org/IMTR_Business/GettStorehouseInfoByIdResponse")]
        byte[] GettStorehouseInfoById(string Txt_Stock_ID, string Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetAlltStorehouseInfo", ReplyAction="http://tempuri.org/IMTR_Business/GetAlltStorehouseInfoResponse")]
        byte[] GetAlltStorehouseInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetAlltStorehouseInfo_WinCe", ReplyAction="http://tempuri.org/IMTR_Business/GetAlltStorehouseInfo_WinCeResponse")]
        byte[] GetAlltStorehouseInfo_WinCe();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/AddStorehouse", ReplyAction="http://tempuri.org/IMTR_Business/AddStorehouseResponse")]
        string AddStorehouse(Entity.tStorehouseInfo warehouse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/UpdateStorehouse", ReplyAction="http://tempuri.org/IMTR_Business/UpdateStorehouseResponse")]
        void UpdateStorehouse(Entity.tStorehouseInfo warehouse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/DeleteStorehouse", ReplyAction="http://tempuri.org/IMTR_Business/DeleteStorehouseResponse")]
        void DeleteStorehouse(string warehouseid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GettLocInfoById", ReplyAction="http://tempuri.org/IMTR_Business/GettLocInfoByIdResponse")]
        byte[] GettLocInfoById(string Txt_Loc_ID, string Txt_Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetAlltLocInfo", ReplyAction="http://tempuri.org/IMTR_Business/GetAlltLocInfoResponse")]
        byte[] GetAlltLocInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetAlltLocInfo_WinCe", ReplyAction="http://tempuri.org/IMTR_Business/GetAlltLocInfo_WinCeResponse")]
        byte[] GetAlltLocInfo_WinCe();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/AddLochouse", ReplyAction="http://tempuri.org/IMTR_Business/AddLochouseResponse")]
        string AddLochouse(TestWeserver.WMS_Material.tLocInfo lochouse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/UpdateLochouse", ReplyAction="http://tempuri.org/IMTR_Business/UpdateLochouseResponse")]
        void UpdateLochouse(TestWeserver.WMS_Material.tLocInfo lochouse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/DeleteLochouse", ReplyAction="http://tempuri.org/IMTR_Business/DeleteLochouseResponse")]
        void DeleteLochouse(string Lochouseid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMTR_Business/GetPartMapsInfoById", ReplyAction="http://tempuri.org/IMTR_Business/GetPartMapsInfoByIdResponse")]
        byte[] GetPartMapsInfoById(string Txt_KP_NO, string Txt_Vender_PN, string Txt_type, int index);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMTR_BusinessChannel : TestWeserver.WMS_Material.IMTR_Business, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MTR_BusinessClient : System.ServiceModel.ClientBase<TestWeserver.WMS_Material.IMTR_Business>, TestWeserver.WMS_Material.IMTR_Business {
        
        public MTR_BusinessClient() {
        }
        
        public MTR_BusinessClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MTR_BusinessClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MTR_BusinessClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MTR_BusinessClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public byte[] Get_part_iqc_check(string PN) {
            return base.Channel.Get_part_iqc_check(PN);
        }
        
        public string Sel_Tr_Sn_Exist(string T_sn) {
            return base.Channel.Sel_Tr_Sn_Exist(T_sn);
        }
        
        public string[] get_Tr_Sn_fifo_Info(string T_sn) {
            return base.Channel.get_Tr_Sn_fifo_Info(T_sn);
        }
        
        public string insert_sample_info(string receive_date, string check_in_date, string checked_in, string kp_no, string productname, string vendor, string sample_name, string color, string conservator, string loc_id, string user_date, string remark, string userid) {
            return base.Channel.insert_sample_info(receive_date, check_in_date, checked_in, kp_no, productname, vendor, sample_name, color, conservator, loc_id, user_date, remark, userid);
        }
        
        public string delete_sample_info(string receive_date, string check_in_date, string kp_no) {
            return base.Channel.delete_sample_info(receive_date, check_in_date, kp_no);
        }
        
        public byte[] get_sample_info(string kp_no) {
            return base.Channel.get_sample_info(kp_no);
        }
        
        public byte[] get_iqc_info_forReport(string kpno, System.DateTime start_time, System.DateTime end_time) {
            return base.Channel.get_iqc_info_forReport(kpno, start_time, end_time);
        }
        
        public byte[] get_warning_info_list(string kpno, string stockId, string locId, int flag) {
            return base.Channel.get_warning_info_list(kpno, stockId, locId, flag);
        }
        
        public byte[] get_wo_pre_info(System.Collections.Generic.Dictionary<string, object>[] dicList) {
            return base.Channel.get_wo_pre_info(dicList);
        }
        
        public byte[] get_pre_mtr_info(string woid) {
            return base.Channel.get_pre_mtr_info(woid);
        }
        
        public string insert_into_trsn(Entity.tRtrsn Rtrsn) {
            return base.Channel.insert_into_trsn(Rtrsn);
        }
        
        public string InsertSapBack(string SHIPING_NO, string KP_NO, int QTY, string STORE_LOC, string MOVE_STLOC, string DEB_CRED) {
            return base.Channel.InsertSapBack(SHIPING_NO, KP_NO, QTY, STORE_LOC, MOVE_STLOC, DEB_CRED);
        }
        
        public string Insert_R_SAP_BACK_SHIPPING(System.Collections.Generic.Dictionary<string, object>[] dicList) {
            return base.Channel.Insert_R_SAP_BACK_SHIPPING(dicList);
        }
        
        public byte[] get_R_Sap_Back_Shipping(string shipno, string debCred) {
            return base.Channel.get_R_Sap_Back_Shipping(shipno, debCred);
        }
        
        public string Update_R_Sap_Back_Shipping(System.Collections.Generic.Dictionary<string, object>[] dicList, string TRANSACTION) {
            return base.Channel.Update_R_Sap_Back_Shipping(dicList, TRANSACTION);
        }
        
        public string check_R_stock_info(string stock_id, string move_stock) {
            return base.Channel.check_R_stock_info(stock_id, move_stock);
        }
        
        public byte[] get_oqc_no_info_wince(string oqc_no) {
            return base.Channel.get_oqc_no_info_wince(oqc_no);
        }
        
        public byte[] get_sap_in_info(System.DateTime start_time, System.DateTime end_time, string no_type, string in_no) {
            return base.Channel.get_sap_in_info(start_time, end_time, no_type, in_no);
        }
        
        public string Insert_R_SAP_BACK_SHIPPING_JSON(string ListJsonStr) {
            return base.Channel.Insert_R_SAP_BACK_SHIPPING_JSON(ListJsonStr);
        }
        
        public string Update_R_Sap_Back_Shipping_JSON(string ListJsonStr, string TRANSACTION) {
            return base.Channel.Update_R_Sap_Back_Shipping_JSON(ListJsonStr, TRANSACTION);
        }
        
        public string Get_Wo_BomInfo(string woId) {
            return base.Channel.Get_Wo_BomInfo(woId);
        }
        
        public byte[] get_not_locid_info() {
            return base.Channel.get_not_locid_info();
        }
        
        public byte[] get_not_locid_list(string data, string data_value) {
            return base.Channel.get_not_locid_list(data, data_value);
        }
        
        public string GetUserInfoByUserId_Xml(string userId) {
            return base.Channel.GetUserInfoByUserId_Xml(userId);
        }
        
        public byte[] getIQC_QTY() {
            return base.Channel.getIQC_QTY();
        }
        
        public string getIQC(string kpno, int qcqty, string userid) {
            return base.Channel.getIQC(kpno, qcqty, userid);
        }
        
        public string insert_IQC_QTY(string kpno, string kpdesc, int qcqty, string userid) {
            return base.Channel.insert_IQC_QTY(kpno, kpdesc, qcqty, userid);
        }
        
        public bool delete_IQC_QTY(string kpno) {
            return base.Channel.delete_IQC_QTY(kpno);
        }
        
        public string update_trsn_by_move_WINCE(string trsn, string stock_in, string move_id) {
            return base.Channel.update_trsn_by_move_WINCE(trsn, stock_in, move_id);
        }
        
        public string[] get_move_info(System.Data.DataTable dt_move, string trsn) {
            return base.Channel.get_move_info(dt_move, trsn);
        }
        
        public byte[] Getmovestoreid_WinCe(string MOVE_STORE_ID) {
            return base.Channel.Getmovestoreid_WinCe(MOVE_STORE_ID);
        }
        
        public string update_accredit_status(string move_stock_id, int status, int accredit_status, string userid, string remark) {
            return base.Channel.update_accredit_status(move_stock_id, status, accredit_status, userid, remark);
        }
        
        public string delete_trsn_qty(out int del_qty, string kpno, string stockno, string datecode) {
            return base.Channel.delete_trsn_qty(out del_qty, kpno, stockno, datecode);
        }
        
        public byte[] get_iqc_sap_info(string stockno) {
            return base.Channel.get_iqc_sap_info(stockno);
        }
        
        public byte[] get_iqc_check_info(string check_area, string check_type) {
            return base.Channel.get_iqc_check_info(check_area, check_type);
        }
        
        public string update_iqc_trsn_status(int RESUILT_ID, string stockno, string kpno, System.Collections.Generic.Dictionary<string, object>[] dicList_ng, System.Collections.Generic.Dictionary<string, object>[] dicList_ok, string remark, System.Collections.Generic.Dictionary<string, object>[] dicList_all) {
            return base.Channel.update_iqc_trsn_status(RESUILT_ID, stockno, kpno, dicList_ng, dicList_ok, remark, dicList_all);
        }
        
        public string insert_iqc_check_info(string stockno, string kpno, string datecode, string trsn, System.Collections.Generic.Dictionary<string, object>[] dicList, string userid, bool iqc_check) {
            return base.Channel.insert_iqc_check_info(stockno, kpno, datecode, trsn, dicList, userid, iqc_check);
        }
        
        public byte[] get_receive_info(string stockno) {
            return base.Channel.get_receive_info(stockno);
        }
        
        public string update_trsn_by_kpno(int pn_Index, string stockno, string kpno) {
            return base.Channel.update_trsn_by_kpno(pn_Index, stockno, kpno);
        }
        
        public byte[] get_iqc_all_info(string stockno, string kpno, int iqc_type) {
            return base.Channel.get_iqc_all_info(stockno, kpno, iqc_type);
        }
        
        public byte[] get_iqc_info_list(string stockno, string kpno, string status) {
            return base.Channel.get_iqc_info_list(stockno, kpno, status);
        }
        
        public byte[] get_iqc_info_by_stockno(string stockno) {
            return base.Channel.get_iqc_info_by_stockno(stockno);
        }
        
        public byte[] get_iqc_check_result(string stockno, string kpno, string dc) {
            return base.Channel.get_iqc_check_result(stockno, kpno, dc);
        }
        
        public string InsertMaterialRec(string KP_NO, int QTY, string stock_id, string loc_id) {
            return base.Channel.InsertMaterialRec(KP_NO, QTY, stock_id, loc_id);
        }
        
        public string Insert_R_SAP_IQC_SHIPPING(string stockno, string kpno, int qty, int qty_ng, string plant) {
            return base.Channel.Insert_R_SAP_IQC_SHIPPING(stockno, kpno, qty, qty_ng, plant);
        }
        
        public byte[] get_iqc_R_SAP_MTRSHIP(string stockno, string kpno) {
            return base.Channel.get_iqc_R_SAP_MTRSHIP(stockno, kpno);
        }
        
        public string Update_IQC_R_SAP_MSHIPPING(string SHIP_NO) {
            return base.Channel.Update_IQC_R_SAP_MSHIPPING(SHIP_NO);
        }
        
        public string insert_r_qc_check_item(string checktype, string checkitem, string checkmethod, string checkstandard, string codeID) {
            return base.Channel.insert_r_qc_check_item(checktype, checkitem, checkmethod, checkstandard, codeID);
        }
        
        public byte[] get_iqc_upload_info(string stockno) {
            return base.Channel.get_iqc_upload_info(stockno);
        }
        
        public byte[] get_iqc_info(string kpno, System.DateTime start_time, System.DateTime end_time) {
            return base.Channel.get_iqc_info(kpno, start_time, end_time);
        }
        
        public byte[] get_r_qc_check_item(string checktype) {
            return base.Channel.get_r_qc_check_item(checktype);
        }
        
        public void UpdateR_PART_MAPS(System.Collections.Generic.Dictionary<string, object>[] diclist, string usedate, string warningdate, string iqccheck_date, string sID, string period_delay) {
            base.Channel.UpdateR_PART_MAPS(diclist, usedate, warningdate, iqccheck_date, sID, period_delay);
        }
        
        public byte[] GetBlockedPN(string Txt_KP_NO) {
            return base.Channel.GetBlockedPN(Txt_KP_NO);
        }
        
        public byte[] GetBlockedReport(string KP_NO, string DATE_CODE, string LOT_CODE, string BLOCKED_TYPE, string VENDER_ID) {
            return base.Channel.GetBlockedReport(KP_NO, DATE_CODE, LOT_CODE, BLOCKED_TYPE, VENDER_ID);
        }
        
        public byte[] GetWarnDate() {
            return base.Channel.GetWarnDate();
        }
        
        public byte[] GetWarnInfo() {
            return base.Channel.GetWarnInfo();
        }
        
        public byte[] GetSeqTrSnAndInsert(Entity.tRtrsn Rtrsn, int pring_qty) {
            return base.Channel.GetSeqTrSnAndInsert(Rtrsn, pring_qty);
        }
        
        public string Get_tr_sn_current(int pring_qty) {
            return base.Channel.Get_tr_sn_current(pring_qty);
        }
        
        public string Insertinto_R_SAP_MATERIAL_SHIPPING(TestWeserver.WMS_Material.tR_SAP_MATERIAL_SHIPPING rmt) {
            return base.Channel.Insertinto_R_SAP_MATERIAL_SHIPPING(rmt);
        }
        
        public string Delete_Tr_Sn_Info(string Tr_Sn) {
            return base.Channel.Delete_Tr_Sn_Info(Tr_Sn);
        }
        
        public string insert_into_wo_bom(System.Collections.Generic.Dictionary<string, object>[] dicList, string woid) {
            return base.Channel.insert_into_wo_bom(dicList, woid);
        }
        
        public byte[] get_fifo_list(System.Collections.Generic.Dictionary<string, object>[] dicList, string plant) {
            return base.Channel.get_fifo_list(dicList, plant);
        }
        
        public byte[] Get_part_info_WinCe(string pn) {
            return base.Channel.Get_part_info_WinCe(pn);
        }
        
        public byte[] get_sap_no_info_WinCe(string oqc_no, string kp_no) {
            return base.Channel.get_sap_no_info_WinCe(oqc_no, kp_no);
        }
        
        public string Insert_R_SAP_MATERIAL_SHIPPING(System.Collections.Generic.Dictionary<string, string>[] LsDic) {
            return base.Channel.Insert_R_SAP_MATERIAL_SHIPPING(LsDic);
        }
        
        public string Update_R_SAP_MATERIAL_SHIPPING(string ROWID, string TRANNO, string SHIP_NO, string KP_NO, int SHIP_QTY) {
            return base.Channel.Update_R_SAP_MATERIAL_SHIPPING(ROWID, TRANNO, SHIP_NO, KP_NO, SHIP_QTY);
        }
        
        public byte[] Get_R_SAP_MATERIAL_SHIPPING(string SHIP_NO) {
            return base.Channel.Get_R_SAP_MATERIAL_SHIPPING(SHIP_NO);
        }
        
        public string Update_R_SAP_MATERIAL_SHIPPING_STATUS(string SHIP_NO, string KP_NO, int SHIP_QTY) {
            return base.Channel.Update_R_SAP_MATERIAL_SHIPPING_STATUS(SHIP_NO, KP_NO, SHIP_QTY);
        }
        
        public byte[] GetUpload_mtr_Sap_Info(string MOVE_TYPE) {
            return base.Channel.GetUpload_mtr_Sap_Info(MOVE_TYPE);
        }
        
        public byte[] getUpload_mtr_Sap_move(string shipno, string movetype, string debcred) {
            return base.Channel.getUpload_mtr_Sap_move(shipno, movetype, debcred);
        }
        
        public string Get_tr_sn_stock_date(string kp_no) {
            return base.Channel.Get_tr_sn_stock_date(kp_no);
        }
        
        public string CHECK_WORDER_ISSUING_WINCE(string TrSn, string[] bom, string woId, string UserId) {
            return base.Channel.CHECK_WORDER_ISSUING_WINCE(TrSn, bom, woId, UserId);
        }
        
        public bool Get_sale_SAP_MATERIAL_SHIPPING(string SHIP_NO) {
            return base.Channel.Get_sale_SAP_MATERIAL_SHIPPING(SHIP_NO);
        }
        
        public string Getweek() {
            return base.Channel.Getweek();
        }
        
        public string Getdate_dc(string dc_week) {
            return base.Channel.Getdate_dc(dc_week);
        }
        
        public string Insert_R_SAP_MTR_SHIPPING(TestWeserver.WMS_Material.tR_SAP_MATERIAL_SHIPPING rmt) {
            return base.Channel.Insert_R_SAP_MTR_SHIPPING(rmt);
        }
        
        public bool Update_R_SAP_MATERIAL_SHIPPING_QTY(System.Collections.Generic.Dictionary<string, object>[] dicList, string trfno) {
            return base.Channel.Update_R_SAP_MATERIAL_SHIPPING_QTY(dicList, trfno);
        }
        
        public byte[] GetR_SAP_MTRSHIP_LIST(System.Collections.Generic.Dictionary<string, object>[] dicList) {
            return base.Channel.GetR_SAP_MTRSHIP_LIST(dicList);
        }
        
        public byte[] get_sol_count(System.Collections.Generic.Dictionary<string, object>[] dicList) {
            return base.Channel.get_sol_count(dicList);
        }
        
        public byte[] get_woidout_count(System.Collections.Generic.Dictionary<string, object>[] dicList) {
            return base.Channel.get_woidout_count(dicList);
        }
        
        public byte[] Sel_Mtr_Inventory(string Kp_No, string stock_id, string USER_ID, string INVENTORY_STATUS) {
            return base.Channel.Sel_Mtr_Inventory(Kp_No, stock_id, USER_ID, INVENTORY_STATUS);
        }
        
        public string Upadte_Mtr_Inventory(TestWeserver.WMS_Material.Tr_Mtr_Inventory Inventory) {
            return base.Channel.Upadte_Mtr_Inventory(Inventory);
        }
        
        public string insert_material_recount(System.Collections.Generic.Dictionary<string, object>[] dicList, string stock_id, string loc_id) {
            return base.Channel.insert_material_recount(dicList, stock_id, loc_id);
        }
        
        public byte[] GetDeptInfo() {
            return base.Channel.GetDeptInfo();
        }
        
        public byte[] GetQtyBykpno(string kp_no, string stock_id, string plant) {
            return base.Channel.GetQtyBykpno(kp_no, stock_id, plant);
        }
        
        public string Sel_MOVEMTR_ID() {
            return base.Channel.Sel_MOVEMTR_ID();
        }
        
        public string insertmove_store_id(TestWeserver.WMS_Material.tRmovestock insertmsi) {
            return base.Channel.insertmove_store_id(insertmsi);
        }
        
        public byte[] Getmovestoreid(string MOVE_STORE_ID, int flag, int status) {
            return base.Channel.Getmovestoreid(MOVE_STORE_ID, flag, status);
        }
        
        public byte[] Getmovestockinfo(string MOVE_STORE_ID) {
            return base.Channel.Getmovestockinfo(MOVE_STORE_ID);
        }
        
        public byte[] GetlocBykpno(string kp_no, string stock_id) {
            return base.Channel.GetlocBykpno(kp_no, stock_id);
        }
        
        public byte[] get_stock_info(string kp_no, string stock_id, string loc_id) {
            return base.Channel.get_stock_info(kp_no, stock_id, loc_id);
        }
        
        public byte[] GettKpBlockedByKpNo(string kp_no) {
            return base.Channel.GettKpBlockedByKpNo(kp_no);
        }
        
        public string move_stock_id_status(string move_stock_id, string kp_no, int status) {
            return base.Channel.move_stock_id_status(move_stock_id, kp_no, status);
        }
        
        public string update_tr_sn_by_move(System.Collections.Generic.Dictionary<string, object>[] dicList, string stock_in, string move_id, string loc_id) {
            return base.Channel.update_tr_sn_by_move(dicList, stock_in, move_id, loc_id);
        }
        
        public string update_material_recount_qty(string kp_no, string stock_id, string loc_id, int new_qty) {
            return base.Channel.update_material_recount_qty(kp_no, stock_id, loc_id, new_qty);
        }
        
        public byte[] get_Receive_stock_info(string move_id, string kp_no) {
            return base.Channel.get_Receive_stock_info(move_id, kp_no);
        }
        
        public string update_tr_sn_loc_status(System.Data.DataTable dt, string new_loc_id) {
            return base.Channel.update_tr_sn_loc_status(dt, new_loc_id);
        }
        
        public byte[] get_mtr_deve_count(string kpnumber, string woid) {
            return base.Channel.get_mtr_deve_count(kpnumber, woid);
        }
        
        public byte[] GetPartMapstype() {
            return base.Channel.GetPartMapstype();
        }
        
        public byte[] get_mtr_deve_info(string kpnumber, string woid) {
            return base.Channel.get_mtr_deve_info(kpnumber, woid);
        }
        
        public byte[] get_warning_in_info(System.DateTime start_time, System.DateTime end_time) {
            return base.Channel.get_warning_in_info(start_time, end_time);
        }
        
        public byte[] get_warning_out_info(System.DateTime start_time, System.DateTime end_time, string woid) {
            return base.Channel.get_warning_out_info(start_time, end_time, woid);
        }
        
        public byte[] get_warning_date_info(string kpno, string stockIn) {
            return base.Channel.get_warning_date_info(kpno, stockIn);
        }
        
        public byte[] get_warning_loc_id_info(string kp_no) {
            return base.Channel.get_warning_loc_id_info(kp_no);
        }
        
        public byte[] Get_Material_Ageing_Report(string KP_NO, int StartDays, int EndDays, int sFlag) {
            return base.Channel.Get_Material_Ageing_Report(KP_NO, StartDays, EndDays, sFlag);
        }
        
        public bool CheckPrgVsersion(string Prg_Name, string Prg_Ver, string Ap_Desc, string Ap_Type, string Ap_Path) {
            return base.Channel.CheckPrgVsersion(Prg_Name, Prg_Ver, Ap_Desc, Ap_Type, Ap_Path);
        }
        
        public string Check_VerMsg() {
            return base.Channel.Check_VerMsg();
        }
        
        public byte[] get_r_tr_sn_detail_info(string woid, string status) {
            return base.Channel.get_r_tr_sn_detail_info(woid, status);
        }
        
        public byte[] get_r_kp_locked() {
            return base.Channel.get_r_kp_locked();
        }
        
        public string insert_r_kp_locked(TestWeserver.WMS_Material.tRKpBlocked rkpblocked) {
            return base.Channel.insert_r_kp_locked(rkpblocked);
        }
        
        public string update_r_kp_locked(TestWeserver.WMS_Material.tRKpBlocked rkpblocked) {
            return base.Channel.update_r_kp_locked(rkpblocked);
        }
        
        public byte[] get_oqc_no_info(string oqc_no) {
            return base.Channel.get_oqc_no_info(oqc_no);
        }
        
        public byte[] get_sap_no_info(string oqc_no, string kp_no) {
            return base.Channel.get_sap_no_info(oqc_no, kp_no);
        }
        
        public string update_tR_SAP_PO_info(string po_id, string oqc_no, string pn, int income_qty, string status, string po_item, string qc_no, string qc_status) {
            return base.Channel.update_tR_SAP_PO_info(po_id, oqc_no, pn, income_qty, status, po_item, qc_no, qc_status);
        }
        
        public string insert_r_sop_no(System.Data.DataTable dt, string stock_no, string stock_year) {
            return base.Channel.insert_r_sop_no(dt, stock_no, stock_year);
        }
        
        public byte[] get_tr_sn_list(string kp_no, string tr_sn) {
            return base.Channel.get_tr_sn_list(kp_no, tr_sn);
        }
        
        public byte[] get_tr_sn_no(string tr_sn) {
            return base.Channel.get_tr_sn_no(tr_sn);
        }
        
        public string update_tr_sn_loc_id(string[] LsTrsn, string stock_id, string loc_id) {
            return base.Channel.update_tr_sn_loc_id(LsTrsn, stock_id, loc_id);
        }
        
        public byte[] get_tr_sn_info(string stock_no, string kp_no, string tr_sn, int status) {
            return base.Channel.get_tr_sn_info(stock_no, kp_no, tr_sn, status);
        }
        
        public string update_tr_sn_qty(string tr_sn, int modify_qty) {
            return base.Channel.update_tr_sn_qty(tr_sn, modify_qty);
        }
        
        public string AddUserJurisdiction(Entity.tUserPopList[] ArrUserPopList) {
            return base.Channel.AddUserJurisdiction(ArrUserPopList);
        }
        
        public string DeletetEditingByUserId(string userId) {
            return base.Channel.DeletetEditingByUserId(userId);
        }
        
        public void AddFunctionList(Entity.tFunctionList[] lsfunlist) {
            base.Channel.AddFunctionList(lsfunlist);
        }
        
        public void AddProgInfo(Entity.tProgInfo proginfomodel) {
            base.Channel.AddProgInfo(proginfomodel);
        }
        
        public byte[] get_R_loction_info(string loc_id) {
            return base.Channel.get_R_loction_info(loc_id);
        }
        
        public byte[] get_R_stock_info(string stock_id) {
            return base.Channel.get_R_stock_info(stock_id);
        }
        
        public string InsertSystemLog(Entity.T_SYSTEM_LOG tsl) {
            return base.Channel.InsertSystemLog(tsl);
        }
        
        public byte[] QueryRoleInfo() {
            return base.Channel.QueryRoleInfo();
        }
        
        public void InsertRoleInfo(Entity.tRoleInfo roleinfo) {
            base.Channel.InsertRoleInfo(roleinfo);
        }
        
        public byte[] GetRoleInfo() {
            return base.Channel.GetRoleInfo();
        }
        
        public byte[] DB_Config(string Prg_Name) {
            return base.Channel.DB_Config(Prg_Name);
        }
        
        public byte[] get_material_stock() {
            return base.Channel.get_material_stock();
        }
        
        public byte[] get_material_info(string stock_id, string kp_no, string loc_id, int flag) {
            return base.Channel.get_material_info(stock_id, kp_no, loc_id, flag);
        }
        
        public byte[] get_stock_list(string kp_no, string stock_id, string loc_id) {
            return base.Channel.get_stock_list(kp_no, stock_id, loc_id);
        }
        
        public byte[] Get_tr_Sn_Count(string STOCK_ID, string KP_NO, string STATUS) {
            return base.Channel.Get_tr_Sn_Count(STOCK_ID, KP_NO, STATUS);
        }
        
        public string Inser_Mtr_Inventory(TestWeserver.WMS_Material.Tr_Mtr_Inventory Inventory) {
            return base.Channel.Inser_Mtr_Inventory(Inventory);
        }
        
        public byte[] GetMaterialPreparationStation(Entity.tMaterialPreparation MP) {
            return base.Channel.GetMaterialPreparationStation(MP);
        }
        
        public byte[] GetMaterialPreparation_1(Entity.tMaterialPreparation tmp) {
            return base.Channel.GetMaterialPreparation_1(tmp);
        }
        
        public byte[] GetKpdistinctMaterial(Entity.tMaterialPreparation tmp) {
            return base.Channel.GetKpdistinctMaterial(tmp);
        }
        
        public byte[] CheckNewStationList(string sSEQ) {
            return base.Channel.CheckNewStationList(sSEQ);
        }
        
        public byte[] QueryAllStationList(string sMasterId, string sWO) {
            return base.Channel.QueryAllStationList(sMasterId, sWO);
        }
        
        public void UpdateMaterialPreparation(Entity.tMaterialPreparation tmp) {
            base.Channel.UpdateMaterialPreparation(tmp);
        }
        
        public byte[] PublicMaterialPreparationSelect(string woId) {
            return base.Channel.PublicMaterialPreparationSelect(woId);
        }
        
        public void InsertMaterialPreparation_1(string sMasterid, string sWoid, string sUserid) {
            base.Channel.InsertMaterialPreparation_1(sMasterid, sWoid, sUserid);
        }
        
        public byte[] GetMaterialPreByStation_1(string mWoid, string mMasterId, string mStationno) {
            return base.Channel.GetMaterialPreByStation_1(mWoid, mMasterId, mStationno);
        }
        
        public byte[] GetMaterialPreByKpnumber_1(string mWoid, string mKpnumber) {
            return base.Channel.GetMaterialPreByKpnumber_1(mWoid, mKpnumber);
        }
        
        public byte[] GetAllMachineInfo() {
            return base.Channel.GetAllMachineInfo();
        }
        
        public byte[] GetMachineInfoByMachineid(string id) {
            return base.Channel.GetMachineInfoByMachineid(id);
        }
        
        public void InsertMachineInfo(Entity.tMachineInfo machineinfo) {
            base.Channel.InsertMachineInfo(machineinfo);
        }
        
        public void EditMachineInfo(string machineId, Entity.tMachineInfo machineInfo) {
            base.Channel.EditMachineInfo(machineId, machineInfo);
        }
        
        public void DeleteMachineInfo(string machineId) {
            base.Channel.DeleteMachineInfo(machineId);
        }
        
        public byte[] GetSMTLineList() {
            return base.Channel.GetSMTLineList();
        }
        
        public byte[] Sel_Kp_Blocked(out string Status, string KP_NO) {
            return base.Channel.Sel_Kp_Blocked(out Status, KP_NO);
        }
        
        public byte[] Sel_Loc_Info(out string Status, string P_Name, string F_Name) {
            return base.Channel.Sel_Loc_Info(out Status, P_Name, F_Name);
        }
        
        public string Del_Loc_Info(string P_Name, string F_Name) {
            return base.Channel.Del_Loc_Info(P_Name, F_Name);
        }
        
        public string Inser_Loc_Info(string P_Name, string F_Name, string PC_NAME, string MAC_ADDRESS, string U_ID, string U_NAME) {
            return base.Channel.Inser_Loc_Info(P_Name, F_Name, PC_NAME, MAC_ADDRESS, U_ID, U_NAME);
        }
        
        public string insert_into_R_tr_sn(Entity.tRtrsn Rtrsn) {
            return base.Channel.insert_into_R_tr_sn(Rtrsn);
        }
        
        public string insert_into_R_tr_sn_detail(Entity.tRtrsn Rtrsn) {
            return base.Channel.insert_into_R_tr_sn_detail(Rtrsn);
        }
        
        public string GetSeqTrSnInfo() {
            return base.Channel.GetSeqTrSnInfo();
        }
        
        public System.DateTime GetServersTime() {
            return base.Channel.GetServersTime();
        }
        
        public byte[] GetPartMapsInfoALL() {
            return base.Channel.GetPartMapsInfoALL();
        }
        
        public string Update_KpInfo(TestWeserver.WMS_Material.tPartMapsInfo locdate) {
            return base.Channel.Update_KpInfo(locdate);
        }
        
        public string Del_KpInfo(string Pn) {
            return base.Channel.Del_KpInfo(Pn);
        }
        
        public byte[] Get_part_info(string pn) {
            return base.Channel.Get_part_info(pn);
        }
        
        public byte[] RefreshMaterialMonitor_WinCE() {
            return base.Channel.RefreshMaterialMonitor_WinCE();
        }
        
        public void UpdateSmtkPMonnitorCdata(Entity.tSmtKpMonitor skm) {
            base.Channel.UpdateSmtkPMonnitorCdata(skm);
        }
        
        public byte[] QueryMaterialInOutPut(Entity.tSmtKpMonitor skm) {
            return base.Channel.QueryMaterialInOutPut(skm);
        }
        
        public byte[] QueryMaterialInOutPut_WinCE(Entity.tSmtKpMonitor skm) {
            return base.Channel.QueryMaterialInOutPut_WinCE(skm);
        }
        
        public byte[] QueryRollbackMaterial(string woId) {
            return base.Channel.QueryRollbackMaterial(woId);
        }
        
        public byte[] QueryRollbackMaterial_WinCE(string woId) {
            return base.Channel.QueryRollbackMaterial_WinCE(woId);
        }
        
        public void RollbackMaterial(Entity.tSmtKpMonitor skm) {
            base.Channel.RollbackMaterial(skm);
        }
        
        public byte[] GetQueliaoStationList(string sSEQ, string sMO) {
            return base.Channel.GetQueliaoStationList(sSEQ, sMO);
        }
        
        public byte[] GetQueliaoStationList_WinCE(string sSEQ, string sMO) {
            return base.Channel.GetQueliaoStationList_WinCE(sSEQ, sMO);
        }
        
        public byte[] CheckSupplyMaterial(string sSEQ, string sMO, string sPartNo) {
            return base.Channel.CheckSupplyMaterial(sSEQ, sMO, sPartNo);
        }
        
        public byte[] CheckSupplyMaterial_WinCE(string sSEQ, string sMO, string sPartNo) {
            return base.Channel.CheckSupplyMaterial_WinCE(sSEQ, sMO, sPartNo);
        }
        
        public void UpdateSupplyMaterialStatus(Entity.tSmtKpMonitor skm) {
            base.Channel.UpdateSupplyMaterialStatus(skm);
        }
        
        public bool CheckKpMasterIdStatus(string masterId) {
            return base.Channel.CheckKpMasterIdStatus(masterId);
        }
        
        public string GetKpMasterIdStatus(string masterId) {
            return base.Channel.GetKpMasterIdStatus(masterId);
        }
        
        public void DeleteSmtKpMonitor(string sSEQ, string sMO) {
            base.Channel.DeleteSmtKpMonitor(sSEQ, sMO);
        }
        
        public string[] GetMaterialTrsnList(string sSEQ, string sWO) {
            return base.Channel.GetMaterialTrsnList(sSEQ, sWO);
        }
        
        public bool CheckSCARCITYStation(string Masterid, string woId, string Machine, string Station) {
            return base.Channel.CheckSCARCITYStation(Masterid, woId, Machine, Station);
        }
        
        public byte[] QueryPartBlocked() {
            return base.Channel.QueryPartBlocked();
        }
        
        public void InsertPartBlocked(Entity.tPartBlockedTable tpb) {
            base.Channel.InsertPartBlocked(tpb);
        }
        
        public void UpdatePartBlocked(Entity.tPartBlockedTable tpb) {
            base.Channel.UpdatePartBlocked(tpb);
        }
        
        public void DeletePartBlocked(string rowid) {
            base.Channel.DeletePartBlocked(rowid);
        }
        
        public byte[] QueryPartBlockedList(string PartNo) {
            return base.Channel.QueryPartBlockedList(PartNo);
        }
        
        public byte[] GettPartBlockedByPartNo(string partno) {
            return base.Channel.GettPartBlockedByPartNo(partno);
        }
        
        public void InserSmtIo(Entity.tSmtIOTable smtio) {
            base.Channel.InserSmtIo(smtio);
        }
        
        public void UpdateSmtIOStatus(Entity.tSmtIOTable sit) {
            base.Channel.UpdateSmtIOStatus(sit);
        }
        
        public byte[] GetAllSmtIO(string sSEQ, string sMO) {
            return base.Channel.GetAllSmtIO(sSEQ, sMO);
        }
        
        public void DeleteSmtIo(string sSEQ, string sMO) {
            base.Channel.DeleteSmtIo(sSEQ, sMO);
        }
        
        public byte[] GetMaterialPreparationKpAndStation(Entity.tMaterialPreparation MP) {
            return base.Channel.GetMaterialPreparationKpAndStation(MP);
        }
        
        public byte[] GetSmtKpMasterNotChecked() {
            return base.Channel.GetSmtKpMasterNotChecked();
        }
        
        public string UpdateAuditingStatus(Entity.tSmtKPMasterTable smtkpmaster) {
            return base.Channel.UpdateAuditingStatus(smtkpmaster);
        }
        
        public byte[] QueryKpMasterAudit(int Days) {
            return base.Channel.QueryKpMasterAudit(Days);
        }
        
        public string InsertSmtKpMonitor(Entity.tSmtKpMonitor kpmonitor) {
            return base.Channel.InsertSmtKpMonitor(kpmonitor);
        }
        
        public byte[] GetSmtKpMonitor(string masterId, string woId, string stationno, int cdata) {
            return base.Channel.GetSmtKpMonitor(masterId, woId, stationno, cdata);
        }
        
        public byte[] GetSmtKpMonitor_WinCE(string masterId, string woId, string stationno, int cdata) {
            return base.Channel.GetSmtKpMonitor_WinCE(masterId, woId, stationno, cdata);
        }
        
        public void EditSmtKpMonitorFlag(string kpmonitorId, BLL.tSmtKpMonitor.CDATA cdata) {
            base.Channel.EditSmtKpMonitorFlag(kpmonitorId, cdata);
        }
        
        public bool Check_MaterialScrap(string pn, string vc, string dc, string lc) {
            return base.Channel.Check_MaterialScrap(pn, vc, dc, lc);
        }
        
        public byte[] GetSmtIO(string masterId, string woId) {
            return base.Channel.GetSmtIO(masterId, woId);
        }
        
        public byte[] GetSmtIO_WinCE(string masterId, string woId) {
            return base.Channel.GetSmtIO_WinCE(masterId, woId);
        }
        
        public byte[] GetSmtIOMachineIdStatus(string machineId, BLL.tSmtIO.SmtIOStatus status) {
            return base.Channel.GetSmtIOMachineIdStatus(machineId, status);
        }
        
        public byte[] GetSmtIOMachineIdStatus_WinCE(string machineId, BLL.tSmtIO.SmtIOStatus status) {
            return base.Channel.GetSmtIOMachineIdStatus_WinCE(machineId, status);
        }
        
        public void EditSmtIOStatus(string masterId, string woId, BLL.tSmtIO.SmtIOStatus status) {
            base.Channel.EditSmtIOStatus(masterId, woId, status);
        }
        
        public byte[] GetMaterialPreparation_WinCE(string woId, string masterId) {
            return base.Channel.GetMaterialPreparation_WinCE(woId, masterId);
        }
        
        public bool ChkNormalLogStatus(string masterId, string woId, string pcbside, string machineId, string stationId) {
            return base.Channel.ChkNormalLogStatus(masterId, woId, pcbside, machineId, stationId);
        }
        
        public string InsertSmtKpNormalLogs(Entity.tSmtKpNormalLog[] lskpnormallog) {
            return base.Channel.InsertSmtKpNormalLogs(lskpnormallog);
        }
        
        public string InsertSmtKpNormalLog(Entity.tSmtKpNormalLog kpnormallog) {
            return base.Channel.InsertSmtKpNormalLog(kpnormallog);
        }
        
        public byte[] GetKpNumberInSEQ(string MasterId, string WoId, string kpnumber, string station) {
            return base.Channel.GetKpNumberInSEQ(MasterId, WoId, kpnumber, station);
        }
        
        public byte[] GetKpNumberInSEQ_WinCE(string MasterId, string WoId, string kpnumber, string station) {
            return base.Channel.GetKpNumberInSEQ_WinCE(MasterId, WoId, kpnumber, station);
        }
        
        public byte[] CheckKpSupply(string MasterId, string WoId, string kpnumber, string cdata) {
            return base.Channel.CheckKpSupply(MasterId, WoId, kpnumber, cdata);
        }
        
        public byte[] CheckKpSupply_WinCE(string MasterId, string WoId, string kpnumber, string cdata) {
            return base.Channel.CheckKpSupply_WinCE(MasterId, WoId, kpnumber, cdata);
        }
        
        public string GetServerDateTime() {
            return base.Channel.GetServerDateTime();
        }
        
        public byte[] GetSmtkPMonnitorStation(string sSEQ, string sMO) {
            return base.Channel.GetSmtkPMonnitorStation(sSEQ, sMO);
        }
        
        public byte[] GetSmtkPMonnitorStation_WinCE(string sSEQ, string sMO) {
            return base.Channel.GetSmtkPMonnitorStation_WinCE(sSEQ, sMO);
        }
        
        public byte[] ChkStationInMonitor(Entity.tSmtKpMonitor skm) {
            return base.Channel.ChkStationInMonitor(skm);
        }
        
        public byte[] ChkStationInMonitor_WinCE(Entity.tSmtKpMonitor skm) {
            return base.Channel.ChkStationInMonitor_WinCE(skm);
        }
        
        public void InsertSmtIoData(Entity.tSmtKpMonitor skm) {
            base.Channel.InsertSmtIoData(skm);
        }
        
        public byte[] RefreshMaterialMonitor() {
            return base.Channel.RefreshMaterialMonitor();
        }
        
        public void UpdateUsedate(string DateType, TestWeserver.WMS_Material.tPartMapsInfo locdate) {
            base.Channel.UpdateUsedate(DateType, locdate);
        }
        
        public byte[] Sel_Material_Preparation_Info(out string Status, string PreparationID) {
            return base.Channel.Sel_Material_Preparation_Info(out Status, PreparationID);
        }
        
        public byte[] Sel_Tr_Sn_Info(out string Status, string T_sn) {
            return base.Channel.Sel_Tr_Sn_Info(out Status, T_sn);
        }
        
        public byte[] Sel_Tr_Sn_Info_CE(out string Status, string T_sn) {
            return base.Channel.Sel_Tr_Sn_Info_CE(out Status, T_sn);
        }
        
        public string Update_TR_SN(string R_Trsn, string R_WOID, string R_USERID, string R_STATUS, string R_RMAK1, string R_RMAK2) {
            return base.Channel.Update_TR_SN(R_Trsn, R_WOID, R_USERID, R_STATUS, R_RMAK1, R_RMAK2);
        }
        
        public byte[] GetWoBomInfo(string woId) {
            return base.Channel.GetWoBomInfo(woId);
        }
        
        public byte[] GetWoBomInfo_WinCE(string woId) {
            return base.Channel.GetWoBomInfo_WinCE(woId);
        }
        
        public string InsertWoBomInfo(Entity.T_WO_BOM_INFO twbi) {
            return base.Channel.InsertWoBomInfo(twbi);
        }
        
        public string InsertWoBomInfoList(Entity.T_WO_BOM_INFO[] lstwbom) {
            return base.Channel.InsertWoBomInfoList(lstwbom);
        }
        
        public string InsertWoBomPrintInfos(Entity.tMaterialPreparation[] mp) {
            return base.Channel.InsertWoBomPrintInfos(mp);
        }
        
        public string InsertWoBomPrintInfo(Entity.tMaterialPreparation mp) {
            return base.Channel.InsertWoBomPrintInfo(mp);
        }
        
        public byte[] GetMaterialPreparation(string woId, string masterId) {
            return base.Channel.GetMaterialPreparation(woId, masterId);
        }
        
        public byte[] QueryWoBomInfoData(string WO) {
            return base.Channel.QueryWoBomInfoData(WO);
        }
        
        public void InserWoBomData(Entity.tWoBomInfoTable wbt) {
            base.Channel.InserWoBomData(wbt);
        }
        
        public byte[] Sel_woId_Trsn_List(string woId, string Flag) {
            return base.Channel.Sel_woId_Trsn_List(woId, Flag);
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public byte[] GetSmtKpMaster(Entity.tSmtKPMasterTable TKM) {
            return base.Channel.GetSmtKpMaster(TKM);
        }
        
        public byte[] GetAllMasterid() {
            return base.Channel.GetAllMasterid();
        }
        
        public void DeleteBomKpMaster(string KpMaster) {
            base.Channel.DeleteBomKpMaster(KpMaster);
        }
        
        public byte[] GetMachineIdAndMasterIdListByPartnumber(string partnumber) {
            return base.Channel.GetMachineIdAndMasterIdListByPartnumber(partnumber);
        }
        
        public string InsertSmtKpDetaltForWo(Entity.SMT_KP_DETALTForWo detaltforwo) {
            return base.Channel.InsertSmtKpDetaltForWo(detaltforwo);
        }
        
        public byte[] GettSmtKPDetaltForWo() {
            return base.Channel.GettSmtKPDetaltForWo();
        }
        
        public byte[] GettSmtKPDetaltForWoByKpnumber(string kpnumber) {
            return base.Channel.GettSmtKPDetaltForWoByKpnumber(kpnumber);
        }
        
        public byte[] GetStationno(string partnumber, string lineid, string pcbside) {
            return base.Channel.GetStationno(partnumber, lineid, pcbside);
        }
        
        public byte[] JudgeKpExists(string stationno, string masterid, string kpnumber) {
            return base.Channel.JudgeKpExists(stationno, masterid, kpnumber);
        }
        
        public byte[] GetPartnumberAData(string partnumber, string lineid, string pcbside) {
            return base.Channel.GetPartnumberAData(partnumber, lineid, pcbside);
        }
        
        public byte[] GetAllKpMaster() {
            return base.Channel.GetAllKpMaster();
        }
        
        public byte[] GetKpDetalt(string masterId) {
            return base.Channel.GetKpDetalt(masterId);
        }
        
        public byte[] GetUserInfoByUserId(string userId) {
            return base.Channel.GetUserInfoByUserId(userId);
        }
        
        public byte[] GetJurUserInfoByIdandpwd(string userId, string pwd) {
            return base.Channel.GetJurUserInfoByIdandpwd(userId, pwd);
        }
        
        public byte[] GetJurUserInfoByIdandpwd_WinCe(string userId, string pwd) {
            return base.Channel.GetJurUserInfoByIdandpwd_WinCe(userId, pwd);
        }
        
        public byte[] GetUserInfo() {
            return base.Channel.GetUserInfo();
        }
        
        public string InsertUserInfo(Entity.tUserInfo userinfo) {
            return base.Channel.InsertUserInfo(userinfo);
        }
        
        public void EditUserInfo(string userId, Entity.tUserInfo userInfo) {
            base.Channel.EditUserInfo(userId, userInfo);
        }
        
        public void UpdateUserPassword(Entity.tUserInfo userinfo) {
            base.Channel.UpdateUserPassword(userinfo);
        }
        
        public byte[] GetAllProgFunctionInfo() {
            return base.Channel.GetAllProgFunctionInfo();
        }
        
        public byte[] GetJurUserInfo() {
            return base.Channel.GetJurUserInfo();
        }
        
        public byte[] GetUserJurisdictionByUserId2(string userId) {
            return base.Channel.GetUserJurisdictionByUserId2(userId);
        }
        
        public byte[] GetUserJurisdictionByUserId(string userId) {
            return base.Channel.GetUserJurisdictionByUserId(userId);
        }
        
        public byte[] GetJurUserInfoById(string userId) {
            return base.Channel.GetJurUserInfoById(userId);
        }
        
        public byte[] GetJurUserInfoByName(string username) {
            return base.Channel.GetJurUserInfoByName(username);
        }
        
        public void DeleteUserInfoByUserId(string userId) {
            base.Channel.DeleteUserInfoByUserId(userId);
        }
        
        public bool ChkUserInfoIdAndPwd(string userId, string pwd) {
            return base.Channel.ChkUserInfoIdAndPwd(userId, pwd);
        }
        
        public byte[] GettStorehouseInfoById(string Txt_Stock_ID, string Status) {
            return base.Channel.GettStorehouseInfoById(Txt_Stock_ID, Status);
        }
        
        public byte[] GetAlltStorehouseInfo() {
            return base.Channel.GetAlltStorehouseInfo();
        }
        
        public byte[] GetAlltStorehouseInfo_WinCe() {
            return base.Channel.GetAlltStorehouseInfo_WinCe();
        }
        
        public string AddStorehouse(Entity.tStorehouseInfo warehouse) {
            return base.Channel.AddStorehouse(warehouse);
        }
        
        public void UpdateStorehouse(Entity.tStorehouseInfo warehouse) {
            base.Channel.UpdateStorehouse(warehouse);
        }
        
        public void DeleteStorehouse(string warehouseid) {
            base.Channel.DeleteStorehouse(warehouseid);
        }
        
        public byte[] GettLocInfoById(string Txt_Loc_ID, string Txt_Status) {
            return base.Channel.GettLocInfoById(Txt_Loc_ID, Txt_Status);
        }
        
        public byte[] GetAlltLocInfo() {
            return base.Channel.GetAlltLocInfo();
        }
        
        public byte[] GetAlltLocInfo_WinCe() {
            return base.Channel.GetAlltLocInfo_WinCe();
        }
        
        public string AddLochouse(TestWeserver.WMS_Material.tLocInfo lochouse) {
            return base.Channel.AddLochouse(lochouse);
        }
        
        public void UpdateLochouse(TestWeserver.WMS_Material.tLocInfo lochouse) {
            base.Channel.UpdateLochouse(lochouse);
        }
        
        public void DeleteLochouse(string Lochouseid) {
            base.Channel.DeleteLochouse(Lochouseid);
        }
        
        public byte[] GetPartMapsInfoById(string Txt_KP_NO, string Txt_Vender_PN, string Txt_type, int index) {
            return base.Channel.GetPartMapsInfoById(Txt_KP_NO, Txt_Vender_PN, Txt_type, index);
        }
    }
}
