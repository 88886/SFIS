//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.1 版自动生成。
// 
#pragma warning disable 1591

namespace 测试用例.reftUserInfo {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="tUserInfoSoap", Namespace="http://tempuri.org/")]
    public partial class tUserInfo : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback DeleteUserInfoByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfo_WinCEOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoByUserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoByUserName_WinCEOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoByUserId_WinCEOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoByDeptOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoByDept_WinCEOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoByFacnameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoByFacname_WinCEOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoByRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoByRole_WinCEOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckUserInfoByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJurUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJurUserInfo_WinCEOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllProgFunctionInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllProgFunctionInfo_WinCEOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserJurisdictionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserJurisdictionByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserJurisdictionByUserId_WinCEOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserJurisdictionByUserId2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserJurisdictionByUserId2_WinCEOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJurUserInfoByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJurUserInfoById_WinCEOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJurUserInfoByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJurUserInfoByName_WinCEOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProgInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFunctionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChkProgIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChkFunctionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserPasswordOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public tUserInfo() {
            this.Url = "http://127.0.0.1/SFIS_WEBSER/tUserInfo.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event DeleteUserInfoByUserIdCompletedEventHandler DeleteUserInfoByUserIdCompleted;
        
        /// <remarks/>
        public event InsertUserInfoCompletedEventHandler InsertUserInfoCompleted;
        
        /// <remarks/>
        public event GetUserInfoCompletedEventHandler GetUserInfoCompleted;
        
        /// <remarks/>
        public event GetUserInfo_WinCECompletedEventHandler GetUserInfo_WinCECompleted;
        
        /// <remarks/>
        public event GetUserInfoByUserNameCompletedEventHandler GetUserInfoByUserNameCompleted;
        
        /// <remarks/>
        public event GetUserInfoByUserName_WinCECompletedEventHandler GetUserInfoByUserName_WinCECompleted;
        
        /// <remarks/>
        public event GetUserInfoByUserIdCompletedEventHandler GetUserInfoByUserIdCompleted;
        
        /// <remarks/>
        public event GetUserInfoByUserId_WinCECompletedEventHandler GetUserInfoByUserId_WinCECompleted;
        
        /// <remarks/>
        public event GetUserInfoByDeptCompletedEventHandler GetUserInfoByDeptCompleted;
        
        /// <remarks/>
        public event GetUserInfoByDept_WinCECompletedEventHandler GetUserInfoByDept_WinCECompleted;
        
        /// <remarks/>
        public event GetUserInfoByFacnameCompletedEventHandler GetUserInfoByFacnameCompleted;
        
        /// <remarks/>
        public event GetUserInfoByFacname_WinCECompletedEventHandler GetUserInfoByFacname_WinCECompleted;
        
        /// <remarks/>
        public event GetUserInfoByRoleCompletedEventHandler GetUserInfoByRoleCompleted;
        
        /// <remarks/>
        public event GetUserInfoByRole_WinCECompletedEventHandler GetUserInfoByRole_WinCECompleted;
        
        /// <remarks/>
        public event EditUserInfoCompletedEventHandler EditUserInfoCompleted;
        
        /// <remarks/>
        public event CheckUserInfoByUserIdCompletedEventHandler CheckUserInfoByUserIdCompleted;
        
        /// <remarks/>
        public event GetJurUserInfoCompletedEventHandler GetJurUserInfoCompleted;
        
        /// <remarks/>
        public event GetJurUserInfo_WinCECompletedEventHandler GetJurUserInfo_WinCECompleted;
        
        /// <remarks/>
        public event GetAllProgFunctionInfoCompletedEventHandler GetAllProgFunctionInfoCompleted;
        
        /// <remarks/>
        public event GetAllProgFunctionInfo_WinCECompletedEventHandler GetAllProgFunctionInfo_WinCECompleted;
        
        /// <remarks/>
        public event AddUserJurisdictionCompletedEventHandler AddUserJurisdictionCompleted;
        
        /// <remarks/>
        public event GetUserJurisdictionByUserIdCompletedEventHandler GetUserJurisdictionByUserIdCompleted;
        
        /// <remarks/>
        public event GetUserJurisdictionByUserId_WinCECompletedEventHandler GetUserJurisdictionByUserId_WinCECompleted;
        
        /// <remarks/>
        public event GetUserJurisdictionByUserId2CompletedEventHandler GetUserJurisdictionByUserId2Completed;
        
        /// <remarks/>
        public event GetUserJurisdictionByUserId2_WinCECompletedEventHandler GetUserJurisdictionByUserId2_WinCECompleted;
        
        /// <remarks/>
        public event GetJurUserInfoByIdCompletedEventHandler GetJurUserInfoByIdCompleted;
        
        /// <remarks/>
        public event GetJurUserInfoById_WinCECompletedEventHandler GetJurUserInfoById_WinCECompleted;
        
        /// <remarks/>
        public event GetJurUserInfoByNameCompletedEventHandler GetJurUserInfoByNameCompleted;
        
        /// <remarks/>
        public event GetJurUserInfoByName_WinCECompletedEventHandler GetJurUserInfoByName_WinCECompleted;
        
        /// <remarks/>
        public event AddProgInfoCompletedEventHandler AddProgInfoCompleted;
        
        /// <remarks/>
        public event AddFunctionListCompletedEventHandler AddFunctionListCompleted;
        
        /// <remarks/>
        public event ChkProgIdCompletedEventHandler ChkProgIdCompleted;
        
        /// <remarks/>
        public event ChkFunctionListCompletedEventHandler ChkFunctionListCompleted;
        
        /// <remarks/>
        public event UpdateUserPasswordCompletedEventHandler UpdateUserPasswordCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteUserInfoByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteUserInfoByUserId(string userId) {
            this.Invoke("DeleteUserInfoByUserId", new object[] {
                        userId});
        }
        
        /// <remarks/>
        public void DeleteUserInfoByUserIdAsync(string userId) {
            this.DeleteUserInfoByUserIdAsync(userId, null);
        }
        
        /// <remarks/>
        public void DeleteUserInfoByUserIdAsync(string userId, object userState) {
            if ((this.DeleteUserInfoByUserIdOperationCompleted == null)) {
                this.DeleteUserInfoByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserInfoByUserIdOperationCompleted);
            }
            this.InvokeAsync("DeleteUserInfoByUserId", new object[] {
                        userId}, this.DeleteUserInfoByUserIdOperationCompleted, userState);
        }
        
        private void OnDeleteUserInfoByUserIdOperationCompleted(object arg) {
            if ((this.DeleteUserInfoByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserInfoByUserIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertUserInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Err")]
        public string InsertUserInfo(tUserInfo1 userinfo) {
            object[] results = this.Invoke("InsertUserInfo", new object[] {
                        userinfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertUserInfoAsync(tUserInfo1 userinfo) {
            this.InsertUserInfoAsync(userinfo, null);
        }
        
        /// <remarks/>
        public void InsertUserInfoAsync(tUserInfo1 userinfo, object userState) {
            if ((this.InsertUserInfoOperationCompleted == null)) {
                this.InsertUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertUserInfoOperationCompleted);
            }
            this.InvokeAsync("InsertUserInfo", new object[] {
                        userinfo}, this.InsertUserInfoOperationCompleted, userState);
        }
        
        private void OnInsertUserInfoOperationCompleted(object arg) {
            if ((this.InsertUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertUserInfoCompleted(this, new InsertUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetUserInfo() {
            object[] results = this.Invoke("GetUserInfo", new object[0]);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoAsync() {
            this.GetUserInfoAsync(null);
        }
        
        /// <remarks/>
        public void GetUserInfoAsync(object userState) {
            if ((this.GetUserInfoOperationCompleted == null)) {
                this.GetUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserInfo", new object[0], this.GetUserInfoOperationCompleted, userState);
        }
        
        private void OnGetUserInfoOperationCompleted(object arg) {
            if ((this.GetUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoCompleted(this, new GetUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserInfo_WinCE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetUserInfo_WinCE() {
            object[] results = this.Invoke("GetUserInfo_WinCE", new object[0]);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfo_WinCEAsync() {
            this.GetUserInfo_WinCEAsync(null);
        }
        
        /// <remarks/>
        public void GetUserInfo_WinCEAsync(object userState) {
            if ((this.GetUserInfo_WinCEOperationCompleted == null)) {
                this.GetUserInfo_WinCEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfo_WinCEOperationCompleted);
            }
            this.InvokeAsync("GetUserInfo_WinCE", new object[0], this.GetUserInfo_WinCEOperationCompleted, userState);
        }
        
        private void OnGetUserInfo_WinCEOperationCompleted(object arg) {
            if ((this.GetUserInfo_WinCECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfo_WinCECompleted(this, new GetUserInfo_WinCECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserInfoByUserName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetUserInfoByUserName(string username) {
            object[] results = this.Invoke("GetUserInfoByUserName", new object[] {
                        username});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoByUserNameAsync(string username) {
            this.GetUserInfoByUserNameAsync(username, null);
        }
        
        /// <remarks/>
        public void GetUserInfoByUserNameAsync(string username, object userState) {
            if ((this.GetUserInfoByUserNameOperationCompleted == null)) {
                this.GetUserInfoByUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoByUserNameOperationCompleted);
            }
            this.InvokeAsync("GetUserInfoByUserName", new object[] {
                        username}, this.GetUserInfoByUserNameOperationCompleted, userState);
        }
        
        private void OnGetUserInfoByUserNameOperationCompleted(object arg) {
            if ((this.GetUserInfoByUserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoByUserNameCompleted(this, new GetUserInfoByUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserInfoByUserName_WinCE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetUserInfoByUserName_WinCE(string username) {
            object[] results = this.Invoke("GetUserInfoByUserName_WinCE", new object[] {
                        username});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoByUserName_WinCEAsync(string username) {
            this.GetUserInfoByUserName_WinCEAsync(username, null);
        }
        
        /// <remarks/>
        public void GetUserInfoByUserName_WinCEAsync(string username, object userState) {
            if ((this.GetUserInfoByUserName_WinCEOperationCompleted == null)) {
                this.GetUserInfoByUserName_WinCEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoByUserName_WinCEOperationCompleted);
            }
            this.InvokeAsync("GetUserInfoByUserName_WinCE", new object[] {
                        username}, this.GetUserInfoByUserName_WinCEOperationCompleted, userState);
        }
        
        private void OnGetUserInfoByUserName_WinCEOperationCompleted(object arg) {
            if ((this.GetUserInfoByUserName_WinCECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoByUserName_WinCECompleted(this, new GetUserInfoByUserName_WinCECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserInfoByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetUserInfoByUserId(string userId) {
            object[] results = this.Invoke("GetUserInfoByUserId", new object[] {
                        userId});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoByUserIdAsync(string userId) {
            this.GetUserInfoByUserIdAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetUserInfoByUserIdAsync(string userId, object userState) {
            if ((this.GetUserInfoByUserIdOperationCompleted == null)) {
                this.GetUserInfoByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoByUserIdOperationCompleted);
            }
            this.InvokeAsync("GetUserInfoByUserId", new object[] {
                        userId}, this.GetUserInfoByUserIdOperationCompleted, userState);
        }
        
        private void OnGetUserInfoByUserIdOperationCompleted(object arg) {
            if ((this.GetUserInfoByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoByUserIdCompleted(this, new GetUserInfoByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserInfoByUserId_WinCE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetUserInfoByUserId_WinCE(string userId) {
            object[] results = this.Invoke("GetUserInfoByUserId_WinCE", new object[] {
                        userId});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoByUserId_WinCEAsync(string userId) {
            this.GetUserInfoByUserId_WinCEAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetUserInfoByUserId_WinCEAsync(string userId, object userState) {
            if ((this.GetUserInfoByUserId_WinCEOperationCompleted == null)) {
                this.GetUserInfoByUserId_WinCEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoByUserId_WinCEOperationCompleted);
            }
            this.InvokeAsync("GetUserInfoByUserId_WinCE", new object[] {
                        userId}, this.GetUserInfoByUserId_WinCEOperationCompleted, userState);
        }
        
        private void OnGetUserInfoByUserId_WinCEOperationCompleted(object arg) {
            if ((this.GetUserInfoByUserId_WinCECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoByUserId_WinCECompleted(this, new GetUserInfoByUserId_WinCECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserInfoByDept", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetUserInfoByDept(string dept) {
            object[] results = this.Invoke("GetUserInfoByDept", new object[] {
                        dept});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoByDeptAsync(string dept) {
            this.GetUserInfoByDeptAsync(dept, null);
        }
        
        /// <remarks/>
        public void GetUserInfoByDeptAsync(string dept, object userState) {
            if ((this.GetUserInfoByDeptOperationCompleted == null)) {
                this.GetUserInfoByDeptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoByDeptOperationCompleted);
            }
            this.InvokeAsync("GetUserInfoByDept", new object[] {
                        dept}, this.GetUserInfoByDeptOperationCompleted, userState);
        }
        
        private void OnGetUserInfoByDeptOperationCompleted(object arg) {
            if ((this.GetUserInfoByDeptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoByDeptCompleted(this, new GetUserInfoByDeptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserInfoByDept_WinCE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetUserInfoByDept_WinCE(string dept) {
            object[] results = this.Invoke("GetUserInfoByDept_WinCE", new object[] {
                        dept});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoByDept_WinCEAsync(string dept) {
            this.GetUserInfoByDept_WinCEAsync(dept, null);
        }
        
        /// <remarks/>
        public void GetUserInfoByDept_WinCEAsync(string dept, object userState) {
            if ((this.GetUserInfoByDept_WinCEOperationCompleted == null)) {
                this.GetUserInfoByDept_WinCEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoByDept_WinCEOperationCompleted);
            }
            this.InvokeAsync("GetUserInfoByDept_WinCE", new object[] {
                        dept}, this.GetUserInfoByDept_WinCEOperationCompleted, userState);
        }
        
        private void OnGetUserInfoByDept_WinCEOperationCompleted(object arg) {
            if ((this.GetUserInfoByDept_WinCECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoByDept_WinCECompleted(this, new GetUserInfoByDept_WinCECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserInfoByFacname", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetUserInfoByFacname(string facname) {
            object[] results = this.Invoke("GetUserInfoByFacname", new object[] {
                        facname});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoByFacnameAsync(string facname) {
            this.GetUserInfoByFacnameAsync(facname, null);
        }
        
        /// <remarks/>
        public void GetUserInfoByFacnameAsync(string facname, object userState) {
            if ((this.GetUserInfoByFacnameOperationCompleted == null)) {
                this.GetUserInfoByFacnameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoByFacnameOperationCompleted);
            }
            this.InvokeAsync("GetUserInfoByFacname", new object[] {
                        facname}, this.GetUserInfoByFacnameOperationCompleted, userState);
        }
        
        private void OnGetUserInfoByFacnameOperationCompleted(object arg) {
            if ((this.GetUserInfoByFacnameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoByFacnameCompleted(this, new GetUserInfoByFacnameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserInfoByFacname_WinCE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetUserInfoByFacname_WinCE(string facname) {
            object[] results = this.Invoke("GetUserInfoByFacname_WinCE", new object[] {
                        facname});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoByFacname_WinCEAsync(string facname) {
            this.GetUserInfoByFacname_WinCEAsync(facname, null);
        }
        
        /// <remarks/>
        public void GetUserInfoByFacname_WinCEAsync(string facname, object userState) {
            if ((this.GetUserInfoByFacname_WinCEOperationCompleted == null)) {
                this.GetUserInfoByFacname_WinCEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoByFacname_WinCEOperationCompleted);
            }
            this.InvokeAsync("GetUserInfoByFacname_WinCE", new object[] {
                        facname}, this.GetUserInfoByFacname_WinCEOperationCompleted, userState);
        }
        
        private void OnGetUserInfoByFacname_WinCEOperationCompleted(object arg) {
            if ((this.GetUserInfoByFacname_WinCECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoByFacname_WinCECompleted(this, new GetUserInfoByFacname_WinCECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserInfoByRole", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetUserInfoByRole(string rolename) {
            object[] results = this.Invoke("GetUserInfoByRole", new object[] {
                        rolename});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoByRoleAsync(string rolename) {
            this.GetUserInfoByRoleAsync(rolename, null);
        }
        
        /// <remarks/>
        public void GetUserInfoByRoleAsync(string rolename, object userState) {
            if ((this.GetUserInfoByRoleOperationCompleted == null)) {
                this.GetUserInfoByRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoByRoleOperationCompleted);
            }
            this.InvokeAsync("GetUserInfoByRole", new object[] {
                        rolename}, this.GetUserInfoByRoleOperationCompleted, userState);
        }
        
        private void OnGetUserInfoByRoleOperationCompleted(object arg) {
            if ((this.GetUserInfoByRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoByRoleCompleted(this, new GetUserInfoByRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserInfoByRole_WinCE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetUserInfoByRole_WinCE(string rolename) {
            object[] results = this.Invoke("GetUserInfoByRole_WinCE", new object[] {
                        rolename});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoByRole_WinCEAsync(string rolename) {
            this.GetUserInfoByRole_WinCEAsync(rolename, null);
        }
        
        /// <remarks/>
        public void GetUserInfoByRole_WinCEAsync(string rolename, object userState) {
            if ((this.GetUserInfoByRole_WinCEOperationCompleted == null)) {
                this.GetUserInfoByRole_WinCEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoByRole_WinCEOperationCompleted);
            }
            this.InvokeAsync("GetUserInfoByRole_WinCE", new object[] {
                        rolename}, this.GetUserInfoByRole_WinCEOperationCompleted, userState);
        }
        
        private void OnGetUserInfoByRole_WinCEOperationCompleted(object arg) {
            if ((this.GetUserInfoByRole_WinCECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoByRole_WinCECompleted(this, new GetUserInfoByRole_WinCECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EditUserInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EditUserInfo(string userId, tUserInfo1 userInfo) {
            this.Invoke("EditUserInfo", new object[] {
                        userId,
                        userInfo});
        }
        
        /// <remarks/>
        public void EditUserInfoAsync(string userId, tUserInfo1 userInfo) {
            this.EditUserInfoAsync(userId, userInfo, null);
        }
        
        /// <remarks/>
        public void EditUserInfoAsync(string userId, tUserInfo1 userInfo, object userState) {
            if ((this.EditUserInfoOperationCompleted == null)) {
                this.EditUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditUserInfoOperationCompleted);
            }
            this.InvokeAsync("EditUserInfo", new object[] {
                        userId,
                        userInfo}, this.EditUserInfoOperationCompleted, userState);
        }
        
        private void OnEditUserInfoOperationCompleted(object arg) {
            if ((this.EditUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditUserInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckUserInfoByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckUserInfoByUserId(string userId) {
            object[] results = this.Invoke("CheckUserInfoByUserId", new object[] {
                        userId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckUserInfoByUserIdAsync(string userId) {
            this.CheckUserInfoByUserIdAsync(userId, null);
        }
        
        /// <remarks/>
        public void CheckUserInfoByUserIdAsync(string userId, object userState) {
            if ((this.CheckUserInfoByUserIdOperationCompleted == null)) {
                this.CheckUserInfoByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckUserInfoByUserIdOperationCompleted);
            }
            this.InvokeAsync("CheckUserInfoByUserId", new object[] {
                        userId}, this.CheckUserInfoByUserIdOperationCompleted, userState);
        }
        
        private void OnCheckUserInfoByUserIdOperationCompleted(object arg) {
            if ((this.CheckUserInfoByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckUserInfoByUserIdCompleted(this, new CheckUserInfoByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetJurUserInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetJurUserInfo() {
            object[] results = this.Invoke("GetJurUserInfo", new object[0]);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetJurUserInfoAsync() {
            this.GetJurUserInfoAsync(null);
        }
        
        /// <remarks/>
        public void GetJurUserInfoAsync(object userState) {
            if ((this.GetJurUserInfoOperationCompleted == null)) {
                this.GetJurUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJurUserInfoOperationCompleted);
            }
            this.InvokeAsync("GetJurUserInfo", new object[0], this.GetJurUserInfoOperationCompleted, userState);
        }
        
        private void OnGetJurUserInfoOperationCompleted(object arg) {
            if ((this.GetJurUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJurUserInfoCompleted(this, new GetJurUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetJurUserInfo_WinCE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetJurUserInfo_WinCE() {
            object[] results = this.Invoke("GetJurUserInfo_WinCE", new object[0]);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetJurUserInfo_WinCEAsync() {
            this.GetJurUserInfo_WinCEAsync(null);
        }
        
        /// <remarks/>
        public void GetJurUserInfo_WinCEAsync(object userState) {
            if ((this.GetJurUserInfo_WinCEOperationCompleted == null)) {
                this.GetJurUserInfo_WinCEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJurUserInfo_WinCEOperationCompleted);
            }
            this.InvokeAsync("GetJurUserInfo_WinCE", new object[0], this.GetJurUserInfo_WinCEOperationCompleted, userState);
        }
        
        private void OnGetJurUserInfo_WinCEOperationCompleted(object arg) {
            if ((this.GetJurUserInfo_WinCECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJurUserInfo_WinCECompleted(this, new GetJurUserInfo_WinCECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllProgFunctionInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetAllProgFunctionInfo() {
            object[] results = this.Invoke("GetAllProgFunctionInfo", new object[0]);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllProgFunctionInfoAsync() {
            this.GetAllProgFunctionInfoAsync(null);
        }
        
        /// <remarks/>
        public void GetAllProgFunctionInfoAsync(object userState) {
            if ((this.GetAllProgFunctionInfoOperationCompleted == null)) {
                this.GetAllProgFunctionInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllProgFunctionInfoOperationCompleted);
            }
            this.InvokeAsync("GetAllProgFunctionInfo", new object[0], this.GetAllProgFunctionInfoOperationCompleted, userState);
        }
        
        private void OnGetAllProgFunctionInfoOperationCompleted(object arg) {
            if ((this.GetAllProgFunctionInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllProgFunctionInfoCompleted(this, new GetAllProgFunctionInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllProgFunctionInfo_WinCE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetAllProgFunctionInfo_WinCE() {
            object[] results = this.Invoke("GetAllProgFunctionInfo_WinCE", new object[0]);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllProgFunctionInfo_WinCEAsync() {
            this.GetAllProgFunctionInfo_WinCEAsync(null);
        }
        
        /// <remarks/>
        public void GetAllProgFunctionInfo_WinCEAsync(object userState) {
            if ((this.GetAllProgFunctionInfo_WinCEOperationCompleted == null)) {
                this.GetAllProgFunctionInfo_WinCEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllProgFunctionInfo_WinCEOperationCompleted);
            }
            this.InvokeAsync("GetAllProgFunctionInfo_WinCE", new object[0], this.GetAllProgFunctionInfo_WinCEOperationCompleted, userState);
        }
        
        private void OnGetAllProgFunctionInfo_WinCEOperationCompleted(object arg) {
            if ((this.GetAllProgFunctionInfo_WinCECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllProgFunctionInfo_WinCECompleted(this, new GetAllProgFunctionInfo_WinCECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUserJurisdiction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddUserJurisdiction(tUserPopList[] ArrUserPopList) {
            object[] results = this.Invoke("AddUserJurisdiction", new object[] {
                        ArrUserPopList});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserJurisdictionAsync(tUserPopList[] ArrUserPopList) {
            this.AddUserJurisdictionAsync(ArrUserPopList, null);
        }
        
        /// <remarks/>
        public void AddUserJurisdictionAsync(tUserPopList[] ArrUserPopList, object userState) {
            if ((this.AddUserJurisdictionOperationCompleted == null)) {
                this.AddUserJurisdictionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserJurisdictionOperationCompleted);
            }
            this.InvokeAsync("AddUserJurisdiction", new object[] {
                        ArrUserPopList}, this.AddUserJurisdictionOperationCompleted, userState);
        }
        
        private void OnAddUserJurisdictionOperationCompleted(object arg) {
            if ((this.AddUserJurisdictionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserJurisdictionCompleted(this, new AddUserJurisdictionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserJurisdictionByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetUserJurisdictionByUserId(string userId) {
            object[] results = this.Invoke("GetUserJurisdictionByUserId", new object[] {
                        userId});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserJurisdictionByUserIdAsync(string userId) {
            this.GetUserJurisdictionByUserIdAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetUserJurisdictionByUserIdAsync(string userId, object userState) {
            if ((this.GetUserJurisdictionByUserIdOperationCompleted == null)) {
                this.GetUserJurisdictionByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserJurisdictionByUserIdOperationCompleted);
            }
            this.InvokeAsync("GetUserJurisdictionByUserId", new object[] {
                        userId}, this.GetUserJurisdictionByUserIdOperationCompleted, userState);
        }
        
        private void OnGetUserJurisdictionByUserIdOperationCompleted(object arg) {
            if ((this.GetUserJurisdictionByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserJurisdictionByUserIdCompleted(this, new GetUserJurisdictionByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserJurisdictionByUserId_WinCE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetUserJurisdictionByUserId_WinCE(string userId) {
            object[] results = this.Invoke("GetUserJurisdictionByUserId_WinCE", new object[] {
                        userId});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserJurisdictionByUserId_WinCEAsync(string userId) {
            this.GetUserJurisdictionByUserId_WinCEAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetUserJurisdictionByUserId_WinCEAsync(string userId, object userState) {
            if ((this.GetUserJurisdictionByUserId_WinCEOperationCompleted == null)) {
                this.GetUserJurisdictionByUserId_WinCEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserJurisdictionByUserId_WinCEOperationCompleted);
            }
            this.InvokeAsync("GetUserJurisdictionByUserId_WinCE", new object[] {
                        userId}, this.GetUserJurisdictionByUserId_WinCEOperationCompleted, userState);
        }
        
        private void OnGetUserJurisdictionByUserId_WinCEOperationCompleted(object arg) {
            if ((this.GetUserJurisdictionByUserId_WinCECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserJurisdictionByUserId_WinCECompleted(this, new GetUserJurisdictionByUserId_WinCECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserJurisdictionByUserId2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetUserJurisdictionByUserId2(string userId) {
            object[] results = this.Invoke("GetUserJurisdictionByUserId2", new object[] {
                        userId});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserJurisdictionByUserId2Async(string userId) {
            this.GetUserJurisdictionByUserId2Async(userId, null);
        }
        
        /// <remarks/>
        public void GetUserJurisdictionByUserId2Async(string userId, object userState) {
            if ((this.GetUserJurisdictionByUserId2OperationCompleted == null)) {
                this.GetUserJurisdictionByUserId2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserJurisdictionByUserId2OperationCompleted);
            }
            this.InvokeAsync("GetUserJurisdictionByUserId2", new object[] {
                        userId}, this.GetUserJurisdictionByUserId2OperationCompleted, userState);
        }
        
        private void OnGetUserJurisdictionByUserId2OperationCompleted(object arg) {
            if ((this.GetUserJurisdictionByUserId2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserJurisdictionByUserId2Completed(this, new GetUserJurisdictionByUserId2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserJurisdictionByUserId2_WinCE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetUserJurisdictionByUserId2_WinCE(string userId) {
            object[] results = this.Invoke("GetUserJurisdictionByUserId2_WinCE", new object[] {
                        userId});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserJurisdictionByUserId2_WinCEAsync(string userId) {
            this.GetUserJurisdictionByUserId2_WinCEAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetUserJurisdictionByUserId2_WinCEAsync(string userId, object userState) {
            if ((this.GetUserJurisdictionByUserId2_WinCEOperationCompleted == null)) {
                this.GetUserJurisdictionByUserId2_WinCEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserJurisdictionByUserId2_WinCEOperationCompleted);
            }
            this.InvokeAsync("GetUserJurisdictionByUserId2_WinCE", new object[] {
                        userId}, this.GetUserJurisdictionByUserId2_WinCEOperationCompleted, userState);
        }
        
        private void OnGetUserJurisdictionByUserId2_WinCEOperationCompleted(object arg) {
            if ((this.GetUserJurisdictionByUserId2_WinCECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserJurisdictionByUserId2_WinCECompleted(this, new GetUserJurisdictionByUserId2_WinCECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetJurUserInfoById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetJurUserInfoById(string userId) {
            object[] results = this.Invoke("GetJurUserInfoById", new object[] {
                        userId});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetJurUserInfoByIdAsync(string userId) {
            this.GetJurUserInfoByIdAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetJurUserInfoByIdAsync(string userId, object userState) {
            if ((this.GetJurUserInfoByIdOperationCompleted == null)) {
                this.GetJurUserInfoByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJurUserInfoByIdOperationCompleted);
            }
            this.InvokeAsync("GetJurUserInfoById", new object[] {
                        userId}, this.GetJurUserInfoByIdOperationCompleted, userState);
        }
        
        private void OnGetJurUserInfoByIdOperationCompleted(object arg) {
            if ((this.GetJurUserInfoByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJurUserInfoByIdCompleted(this, new GetJurUserInfoByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetJurUserInfoById_WinCE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetJurUserInfoById_WinCE(string userId) {
            object[] results = this.Invoke("GetJurUserInfoById_WinCE", new object[] {
                        userId});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetJurUserInfoById_WinCEAsync(string userId) {
            this.GetJurUserInfoById_WinCEAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetJurUserInfoById_WinCEAsync(string userId, object userState) {
            if ((this.GetJurUserInfoById_WinCEOperationCompleted == null)) {
                this.GetJurUserInfoById_WinCEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJurUserInfoById_WinCEOperationCompleted);
            }
            this.InvokeAsync("GetJurUserInfoById_WinCE", new object[] {
                        userId}, this.GetJurUserInfoById_WinCEOperationCompleted, userState);
        }
        
        private void OnGetJurUserInfoById_WinCEOperationCompleted(object arg) {
            if ((this.GetJurUserInfoById_WinCECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJurUserInfoById_WinCECompleted(this, new GetJurUserInfoById_WinCECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetJurUserInfoByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetJurUserInfoByName(string username) {
            object[] results = this.Invoke("GetJurUserInfoByName", new object[] {
                        username});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetJurUserInfoByNameAsync(string username) {
            this.GetJurUserInfoByNameAsync(username, null);
        }
        
        /// <remarks/>
        public void GetJurUserInfoByNameAsync(string username, object userState) {
            if ((this.GetJurUserInfoByNameOperationCompleted == null)) {
                this.GetJurUserInfoByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJurUserInfoByNameOperationCompleted);
            }
            this.InvokeAsync("GetJurUserInfoByName", new object[] {
                        username}, this.GetJurUserInfoByNameOperationCompleted, userState);
        }
        
        private void OnGetJurUserInfoByNameOperationCompleted(object arg) {
            if ((this.GetJurUserInfoByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJurUserInfoByNameCompleted(this, new GetJurUserInfoByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetJurUserInfoByName_WinCE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetJurUserInfoByName_WinCE(string username) {
            object[] results = this.Invoke("GetJurUserInfoByName_WinCE", new object[] {
                        username});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetJurUserInfoByName_WinCEAsync(string username) {
            this.GetJurUserInfoByName_WinCEAsync(username, null);
        }
        
        /// <remarks/>
        public void GetJurUserInfoByName_WinCEAsync(string username, object userState) {
            if ((this.GetJurUserInfoByName_WinCEOperationCompleted == null)) {
                this.GetJurUserInfoByName_WinCEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJurUserInfoByName_WinCEOperationCompleted);
            }
            this.InvokeAsync("GetJurUserInfoByName_WinCE", new object[] {
                        username}, this.GetJurUserInfoByName_WinCEOperationCompleted, userState);
        }
        
        private void OnGetJurUserInfoByName_WinCEOperationCompleted(object arg) {
            if ((this.GetJurUserInfoByName_WinCECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJurUserInfoByName_WinCECompleted(this, new GetJurUserInfoByName_WinCECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddProgInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddProgInfo(tProgInfo proginfomodel) {
            this.Invoke("AddProgInfo", new object[] {
                        proginfomodel});
        }
        
        /// <remarks/>
        public void AddProgInfoAsync(tProgInfo proginfomodel) {
            this.AddProgInfoAsync(proginfomodel, null);
        }
        
        /// <remarks/>
        public void AddProgInfoAsync(tProgInfo proginfomodel, object userState) {
            if ((this.AddProgInfoOperationCompleted == null)) {
                this.AddProgInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProgInfoOperationCompleted);
            }
            this.InvokeAsync("AddProgInfo", new object[] {
                        proginfomodel}, this.AddProgInfoOperationCompleted, userState);
        }
        
        private void OnAddProgInfoOperationCompleted(object arg) {
            if ((this.AddProgInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProgInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddFunctionList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddFunctionList(tFunctionList[] lsfunlist) {
            this.Invoke("AddFunctionList", new object[] {
                        lsfunlist});
        }
        
        /// <remarks/>
        public void AddFunctionListAsync(tFunctionList[] lsfunlist) {
            this.AddFunctionListAsync(lsfunlist, null);
        }
        
        /// <remarks/>
        public void AddFunctionListAsync(tFunctionList[] lsfunlist, object userState) {
            if ((this.AddFunctionListOperationCompleted == null)) {
                this.AddFunctionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFunctionListOperationCompleted);
            }
            this.InvokeAsync("AddFunctionList", new object[] {
                        lsfunlist}, this.AddFunctionListOperationCompleted, userState);
        }
        
        private void OnAddFunctionListOperationCompleted(object arg) {
            if ((this.AddFunctionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFunctionListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChkProgId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChkProgId(string progid) {
            object[] results = this.Invoke("ChkProgId", new object[] {
                        progid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChkProgIdAsync(string progid) {
            this.ChkProgIdAsync(progid, null);
        }
        
        /// <remarks/>
        public void ChkProgIdAsync(string progid, object userState) {
            if ((this.ChkProgIdOperationCompleted == null)) {
                this.ChkProgIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChkProgIdOperationCompleted);
            }
            this.InvokeAsync("ChkProgId", new object[] {
                        progid}, this.ChkProgIdOperationCompleted, userState);
        }
        
        private void OnChkProgIdOperationCompleted(object arg) {
            if ((this.ChkProgIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChkProgIdCompleted(this, new ChkProgIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChkFunctionList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChkFunctionList(string progid, string funid) {
            object[] results = this.Invoke("ChkFunctionList", new object[] {
                        progid,
                        funid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChkFunctionListAsync(string progid, string funid) {
            this.ChkFunctionListAsync(progid, funid, null);
        }
        
        /// <remarks/>
        public void ChkFunctionListAsync(string progid, string funid, object userState) {
            if ((this.ChkFunctionListOperationCompleted == null)) {
                this.ChkFunctionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChkFunctionListOperationCompleted);
            }
            this.InvokeAsync("ChkFunctionList", new object[] {
                        progid,
                        funid}, this.ChkFunctionListOperationCompleted, userState);
        }
        
        private void OnChkFunctionListOperationCompleted(object arg) {
            if ((this.ChkFunctionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChkFunctionListCompleted(this, new ChkFunctionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUserPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateUserPassword(tUserInfo1 userinfo) {
            this.Invoke("UpdateUserPassword", new object[] {
                        userinfo});
        }
        
        /// <remarks/>
        public void UpdateUserPasswordAsync(tUserInfo1 userinfo) {
            this.UpdateUserPasswordAsync(userinfo, null);
        }
        
        /// <remarks/>
        public void UpdateUserPasswordAsync(tUserInfo1 userinfo, object userState) {
            if ((this.UpdateUserPasswordOperationCompleted == null)) {
                this.UpdateUserPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserPasswordOperationCompleted);
            }
            this.InvokeAsync("UpdateUserPassword", new object[] {
                        userinfo}, this.UpdateUserPasswordOperationCompleted, userState);
        }
        
        private void OnUpdateUserPasswordOperationCompleted(object arg) {
            if ((this.UpdateUserPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserPasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="tUserInfo", Namespace="http://tempuri.org/")]
    public partial class tUserInfo1 {
        
        private string userIdField;
        
        private string rolecaptionField;
        
        private string deptnameField;
        
        private string facIdField;
        
        private string usernameField;
        
        private string pwdField;
        
        private string userphoneField;
        
        private string useremailField;
        
        private bool userstatusField;
        
        private System.Data.DataTable userPopListField;
        
        /// <remarks/>
        public string userId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string rolecaption {
            get {
                return this.rolecaptionField;
            }
            set {
                this.rolecaptionField = value;
            }
        }
        
        /// <remarks/>
        public string deptname {
            get {
                return this.deptnameField;
            }
            set {
                this.deptnameField = value;
            }
        }
        
        /// <remarks/>
        public string facId {
            get {
                return this.facIdField;
            }
            set {
                this.facIdField = value;
            }
        }
        
        /// <remarks/>
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string pwd {
            get {
                return this.pwdField;
            }
            set {
                this.pwdField = value;
            }
        }
        
        /// <remarks/>
        public string userphone {
            get {
                return this.userphoneField;
            }
            set {
                this.userphoneField = value;
            }
        }
        
        /// <remarks/>
        public string useremail {
            get {
                return this.useremailField;
            }
            set {
                this.useremailField = value;
            }
        }
        
        /// <remarks/>
        public bool userstatus {
            get {
                return this.userstatusField;
            }
            set {
                this.userstatusField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable userPopList {
            get {
                return this.userPopListField;
            }
            set {
                this.userPopListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class tFunctionList {
        
        private string funIdField;
        
        private string progidField;
        
        private string funnameField;
        
        private string fundescField;
        
        /// <remarks/>
        public string funId {
            get {
                return this.funIdField;
            }
            set {
                this.funIdField = value;
            }
        }
        
        /// <remarks/>
        public string progid {
            get {
                return this.progidField;
            }
            set {
                this.progidField = value;
            }
        }
        
        /// <remarks/>
        public string funname {
            get {
                return this.funnameField;
            }
            set {
                this.funnameField = value;
            }
        }
        
        /// <remarks/>
        public string fundesc {
            get {
                return this.fundescField;
            }
            set {
                this.fundescField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class tProgInfo {
        
        private string progidField;
        
        private string prognameField;
        
        private string progdescField;
        
        /// <remarks/>
        public string progid {
            get {
                return this.progidField;
            }
            set {
                this.progidField = value;
            }
        }
        
        /// <remarks/>
        public string progname {
            get {
                return this.prognameField;
            }
            set {
                this.prognameField = value;
            }
        }
        
        /// <remarks/>
        public string progdesc {
            get {
                return this.progdescField;
            }
            set {
                this.progdescField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class tUserPopList {
        
        private string userIdField;
        
        private string progidField;
        
        private string funidField;
        
        /// <remarks/>
        public string userId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string progid {
            get {
                return this.progidField;
            }
            set {
                this.progidField = value;
            }
        }
        
        /// <remarks/>
        public string funid {
            get {
                return this.funidField;
            }
            set {
                this.funidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteUserInfoByUserIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InsertUserInfoCompletedEventHandler(object sender, InsertUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserInfoCompletedEventHandler(object sender, GetUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserInfo_WinCECompletedEventHandler(object sender, GetUserInfo_WinCECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfo_WinCECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfo_WinCECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserInfoByUserNameCompletedEventHandler(object sender, GetUserInfoByUserNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoByUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoByUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserInfoByUserName_WinCECompletedEventHandler(object sender, GetUserInfoByUserName_WinCECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoByUserName_WinCECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoByUserName_WinCECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserInfoByUserIdCompletedEventHandler(object sender, GetUserInfoByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserInfoByUserId_WinCECompletedEventHandler(object sender, GetUserInfoByUserId_WinCECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoByUserId_WinCECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoByUserId_WinCECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserInfoByDeptCompletedEventHandler(object sender, GetUserInfoByDeptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoByDeptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoByDeptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserInfoByDept_WinCECompletedEventHandler(object sender, GetUserInfoByDept_WinCECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoByDept_WinCECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoByDept_WinCECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserInfoByFacnameCompletedEventHandler(object sender, GetUserInfoByFacnameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoByFacnameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoByFacnameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserInfoByFacname_WinCECompletedEventHandler(object sender, GetUserInfoByFacname_WinCECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoByFacname_WinCECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoByFacname_WinCECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserInfoByRoleCompletedEventHandler(object sender, GetUserInfoByRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoByRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoByRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserInfoByRole_WinCECompletedEventHandler(object sender, GetUserInfoByRole_WinCECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoByRole_WinCECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoByRole_WinCECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EditUserInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CheckUserInfoByUserIdCompletedEventHandler(object sender, CheckUserInfoByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckUserInfoByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckUserInfoByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetJurUserInfoCompletedEventHandler(object sender, GetJurUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJurUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJurUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetJurUserInfo_WinCECompletedEventHandler(object sender, GetJurUserInfo_WinCECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJurUserInfo_WinCECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJurUserInfo_WinCECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllProgFunctionInfoCompletedEventHandler(object sender, GetAllProgFunctionInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllProgFunctionInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllProgFunctionInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllProgFunctionInfo_WinCECompletedEventHandler(object sender, GetAllProgFunctionInfo_WinCECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllProgFunctionInfo_WinCECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllProgFunctionInfo_WinCECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddUserJurisdictionCompletedEventHandler(object sender, AddUserJurisdictionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserJurisdictionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserJurisdictionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserJurisdictionByUserIdCompletedEventHandler(object sender, GetUserJurisdictionByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserJurisdictionByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserJurisdictionByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserJurisdictionByUserId_WinCECompletedEventHandler(object sender, GetUserJurisdictionByUserId_WinCECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserJurisdictionByUserId_WinCECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserJurisdictionByUserId_WinCECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserJurisdictionByUserId2CompletedEventHandler(object sender, GetUserJurisdictionByUserId2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserJurisdictionByUserId2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserJurisdictionByUserId2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserJurisdictionByUserId2_WinCECompletedEventHandler(object sender, GetUserJurisdictionByUserId2_WinCECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserJurisdictionByUserId2_WinCECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserJurisdictionByUserId2_WinCECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetJurUserInfoByIdCompletedEventHandler(object sender, GetJurUserInfoByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJurUserInfoByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJurUserInfoByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetJurUserInfoById_WinCECompletedEventHandler(object sender, GetJurUserInfoById_WinCECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJurUserInfoById_WinCECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJurUserInfoById_WinCECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetJurUserInfoByNameCompletedEventHandler(object sender, GetJurUserInfoByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJurUserInfoByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJurUserInfoByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetJurUserInfoByName_WinCECompletedEventHandler(object sender, GetJurUserInfoByName_WinCECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJurUserInfoByName_WinCECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJurUserInfoByName_WinCECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddProgInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddFunctionListCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ChkProgIdCompletedEventHandler(object sender, ChkProgIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChkProgIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChkProgIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ChkFunctionListCompletedEventHandler(object sender, ChkFunctionListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChkFunctionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChkFunctionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateUserPasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591